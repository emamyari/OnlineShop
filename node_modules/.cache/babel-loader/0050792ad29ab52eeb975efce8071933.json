{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\src\\\\_metronic\\\\i18n\\\\I18nProvider.js\";\nimport React from \"react\";\nimport { useLang } from \"./Metronici18n\";\nimport { IntlProvider } from \"react-intl\";\nimport \"@formatjs/intl-relativetimeformat/polyfill\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/en\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/de\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/es\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/fr\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/ja\";\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/zh\";\nimport deMessages from \"./messages/de\";\nimport enMessages from \"./messages/en\";\nimport esMessages from \"./messages/es\";\nimport frMessages from \"./messages/fr\";\nimport jaMessages from \"./messages/ja\";\nimport zhMessages from \"./messages/zh\";\nvar allMessages = {\n  de: deMessages,\n  en: enMessages,\n  es: esMessages,\n  fr: frMessages,\n  ja: jaMessages,\n  zh: zhMessages\n};\nexport function I18nProvider(_ref) {\n  var children = _ref.children;\n  var locale = useLang();\n  var messages = allMessages[locale];\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: locale,\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"names":["React","useLang","IntlProvider","deMessages","enMessages","esMessages","frMessages","jaMessages","zhMessages","allMessages","de","en","es","fr","ja","zh","I18nProvider","_ref","children","locale","messages","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Emamyari/Desktop/metapp/demo2/src/_metronic/i18n/I18nProvider.js"],"sourcesContent":["import React from \"react\";\r\nimport {useLang} from \"./Metronici18n\";\r\nimport {IntlProvider} from \"react-intl\";\r\nimport \"@formatjs/intl-relativetimeformat/polyfill\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/en\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/de\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/es\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/fr\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/ja\";\r\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/zh\";\r\n\r\nimport deMessages from \"./messages/de\";\r\nimport enMessages from \"./messages/en\";\r\nimport esMessages from \"./messages/es\";\r\nimport frMessages from \"./messages/fr\";\r\nimport jaMessages from \"./messages/ja\";\r\nimport zhMessages from \"./messages/zh\";\r\n\r\nconst allMessages = {\r\n  de: deMessages,\r\n  en: enMessages,\r\n  es: esMessages,\r\n  fr: frMessages,\r\n  ja: jaMessages,\r\n  zh: zhMessages\r\n};\r\n\r\nexport function I18nProvider({ children }) {\r\n  const locale = useLang();\r\n  const messages = allMessages[locale];\r\n\r\n  return (\r\n    <IntlProvider locale={locale} messages={messages}>\r\n      {children}\r\n    </IntlProvider>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,YAAY,QAAO,YAAY;AACvC,OAAO,4CAA4C;AACnD,OAAO,uDAAuD;AAC9D,OAAO,uDAAuD;AAC9D,OAAO,uDAAuD;AAC9D,OAAO,uDAAuD;AAC9D,OAAO,uDAAuD;AAC9D,OAAO,uDAAuD;AAE9D,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,UAAU,MAAM,eAAe;AAEtC,IAAMC,WAAW,GAAG;EAClBC,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP;AACN,CAAC;AAED,OAAO,SAASQ,YAAYA,CAAAC,IAAA,EAAe;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAMC,MAAM,GAAGlB,OAAO,CAAC,CAAC;EACxB,IAAMmB,QAAQ,GAAGX,WAAW,CAACU,MAAM,CAAC;EAEpC,oBACEnB,KAAA,CAAAqB,aAAA,CAACnB,YAAY;IAACiB,MAAM,EAAEA,MAAO;IAACC,QAAQ,EAAEA,QAAS;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9CT,QACW,CAAC;AAEnB"},"metadata":{},"sourceType":"module"}