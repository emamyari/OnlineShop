{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\nvar noop = function noop() {};\n/**\r\n * Wires up Dropdown toggle functionality, returning a set a props to attach\r\n * to the element that functions as the dropdown toggle (generally a button).\r\n *\r\n * @memberOf Dropdown\r\n */\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n    _ref$show = _ref.show,\n    show = _ref$show === void 0 ? false : _ref$show,\n    _ref$toggle = _ref.toggle,\n    toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n    setToggle = _ref.setToggle;\n  return [{\n    ref: setToggle || noop,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\r\n   * A render prop that returns a Toggle element. The `props`\r\n   * argument should spread through to **a component that can accept a ref**. Use\r\n   * the `onToggle` argument to toggle the menu open or closed\r\n   *\r\n   * @type {Function ({\r\n   *   show: boolean,\r\n   *   toggle: (show: boolean) => void,\r\n   *   props: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     aria-haspopup: true\r\n   *     aria-expanded: boolean\r\n   *   },\r\n   * }) => React.Element}\r\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\r\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\r\n *\r\n * @displayName DropdownToggle\r\n * @memberOf Dropdown\r\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n  var _useDropdownToggle = useDropdownToggle(),\n    props = _useDropdownToggle[0],\n    _useDropdownToggle$ = _useDropdownToggle[1],\n    show = _useDropdownToggle$.show,\n    toggle = _useDropdownToggle$.toggle;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    show: show,\n    toggle: toggle,\n    props: props\n  }));\n}\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","map":null,"metadata":{},"sourceType":"module"}