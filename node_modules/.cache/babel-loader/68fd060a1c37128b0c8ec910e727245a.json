{"ast":null,"code":"import _slicedToArray from \"D:\\\\Metronic 7.2.9\\\\theme\\\\react\\\\OnlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"D:\\\\Metronic 7.2.9\\\\theme\\\\react\\\\OnlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Metronic 7.2.9\\\\theme\\\\react\\\\OnlineShop\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\data-displays\\\\TablesExamplesPage.js\",\n  _this2 = this;\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, lighten, withStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Checkbox, Toolbar, Typography, Tooltip, IconButton, TableSortLabel, TablePagination, Switch, FormControlLabel, TableFooter } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 650\n    }\n  };\n});\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\nvar rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)];\n\n// Example 2\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\"\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      width: \"100%\",\n      overflowX: \"auto\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 650\n    }\n  };\n});\n\n// Example 3\nfunction desc3(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\nfunction stableSort3(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? function (a, b) {\n    return desc3(a, b, orderBy);\n  } : function (a, b) {\n    return -desc3(a, b, orderBy);\n  };\n}\nvar headRows3 = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Dessert (100g serving)\"\n}, {\n  id: \"calories\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Calories\"\n}, {\n  id: \"fat\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Fat (g)\"\n}, {\n  id: \"carbs\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Carbs (g)\"\n}, {\n  id: \"protein\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Protein (g)\"\n}];\nfunction EnhancedTableHead3(props) {\n  var _this = this;\n  var onSelectAllClick = props.onSelectAllClick,\n    order = props.order,\n    orderBy = props.orderBy,\n    numSelected = props.numSelected,\n    rowCount = props.rowCount,\n    onRequestSort = props.onRequestSort;\n  var createSortHandler = function createSortHandler(property) {\n    return function (event) {\n      onRequestSort(event, property);\n    };\n  };\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"Select all desserts\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), headRows3.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: row.id,\n      align: row.numeric ? \"right\" : \"left\",\n      padding: row.disablePadding ? \"none\" : \"default\",\n      sortDirection: orderBy === row.id ? order : false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: createSortHandler(row.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, row.label));\n  })));\n}\nEnhancedTableHead3.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nvar useToolbarStyles3 = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: theme.palette.type === \"light\" ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  };\n});\nvar EnhancedTableToolbar3 = function EnhancedTableToolbar3(props) {\n  var classes = useToolbarStyles3();\n  var numSelected = props.numSelected;\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    className: clsx(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.title,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, numSelected, \" selected\") : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Nutrition\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterListIcon, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  })))));\n};\nEnhancedTableToolbar3.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    }\n  };\n});\n\n// Example 4\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n});\nvar StyledTableCell4 = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar StyledTableRow4 = withStyles(function (theme) {\n  return {\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n})(TableRow);\n\n// Example 5\nvar useStyles52 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    table: {\n      minWidth: 500\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    }\n  };\n});\nvar useStyles51 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: theme.spacing(2.5)\n    }\n  };\n});\nfunction TablePaginationActions5(props) {\n  var classes = useStyles51();\n  var theme = useTheme();\n  var count = props.count,\n    page = props.page,\n    rowsPerPage = props.rowsPerPage,\n    onChangePage = props.onChangePage;\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"First Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"Previous Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Next Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Last Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 58\n    }\n  })));\n}\nTablePaginationActions5.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nfunction createData5(name, calories, fat) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat\n  };\n}\nvar rows5 = [createData5(\"Cupcake\", 305, 3.7), createData5(\"Donut\", 452, 25.0), createData5(\"Eclair\", 262, 16.0), createData5(\"Frozen yoghurt\", 159, 6.0), createData5(\"Gingerbread\", 356, 16.0), createData5(\"Honeycomb\", 408, 3.2), createData5(\"Ice cream sandwich\", 237, 9.0), createData5(\"Jelly Bean\", 375, 0.0), createData5(\"KitKat\", 518, 26.0), createData5(\"Lollipop\", 392, 0.2), createData5(\"Marshmallow\", 318, 0), createData5(\"Nougat\", 360, 19.0), createData5(\"Oreo\", 437, 18.0)].sort(function (a, b) {\n  return a.calories < b.calories ? -1 : 1;\n});\n\n// Example 6\nvar TAX_RATE = 0.07;\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n});\nfunction ccyFormat6(num) {\n  return \"\".concat(num.toFixed(2));\n}\nfunction priceRow6(qty, unit) {\n  return qty * unit;\n}\nfunction createRow6(desc, qty, unit) {\n  var price = priceRow6(qty, unit);\n  return {\n    desc: desc,\n    qty: qty,\n    unit: unit,\n    price: price\n  };\n}\nfunction subtotal6(items) {\n  return items.map(function (_ref) {\n    var price = _ref.price;\n    return price;\n  }).reduce(function (sum, i) {\n    return sum + i;\n  }, 0);\n}\nvar rows6 = [createRow6(\"Paperclips (Box)\", 100, 1.15), createRow6(\"Paper (Case)\", 10, 45.99), createRow6(\"Waste Basket\", 2, 17.99)];\nvar invoiceSubtotal6 = subtotal6(rows6);\nvar invoiceTaxes6 = TAX_RATE * invoiceSubtotal6;\nvar invoiceTotal6 = invoiceTaxes6 + invoiceSubtotal6;\nexport default function TablesExamplesPage() {\n  var _this3 = this;\n  // Example 1\n  var classes1 = useStyles1();\n\n  // Example 2\n  var classes2 = useStyles2();\n\n  // Example 3\n  var classes3 = useStyles3();\n  var _React$useState = React.useState(\"asc\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    order3 = _React$useState2[0],\n    setOrder3 = _React$useState2[1];\n  var _React$useState3 = React.useState(\"calories\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    orderBy3 = _React$useState4[0],\n    setOrderBy3 = _React$useState4[1];\n  var _React$useState5 = React.useState([]),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selected3 = _React$useState6[0],\n    setSelected3 = _React$useState6[1];\n  var _React$useState7 = React.useState(0),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    page3 = _React$useState8[0],\n    setPage3 = _React$useState8[1];\n  var _React$useState9 = React.useState(false),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    dense3 = _React$useState10[0],\n    setDense3 = _React$useState10[1];\n  var _React$useState11 = React.useState(5),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    rowsPerPage3 = _React$useState12[0],\n    setRowsPerPage3 = _React$useState12[1];\n  function handleRequestSort3(event, property) {\n    var isDesc = orderBy3 === property && order3 === \"desc\";\n    setOrder3(isDesc ? \"asc\" : \"desc\");\n    setOrderBy3(property);\n  }\n  function handleSelectAllClick3(event) {\n    if (event.target.checked) {\n      var newSelecteds = rows.map(function (n) {\n        return n.name;\n      });\n      setSelected3(newSelecteds);\n      return;\n    }\n    setSelected3([]);\n  }\n  function handleClick3(event, name) {\n    var selectedIndex = selected3.indexOf(name);\n    var newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected3, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected3.slice(1));\n    } else if (selectedIndex === selected3.length - 1) {\n      newSelected = newSelected.concat(selected3.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected3.slice(0, selectedIndex), selected3.slice(selectedIndex + 1));\n    }\n    setSelected3(newSelected);\n  }\n  function handleChangePage3(event, newPage) {\n    setPage3(newPage);\n  }\n  function handleChangeRowsPerPage3(event) {\n    setRowsPerPage3(+event.target.value);\n  }\n  function handleChangeDense3(event) {\n    setDense3(event.target.checked);\n  }\n  var isSelected3 = function isSelected3(name) {\n    return selected3.indexOf(name) !== -1;\n  };\n  var emptyRows3 = rowsPerPage3 - Math.min(rowsPerPage3, rows.length - page3 * rowsPerPage3);\n\n  // Example 4\n  var classes4 = useStyles4();\n\n  // Example 5\n  var classes5 = useStyles52();\n  var _React$useState13 = React.useState(0),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    page5 = _React$useState14[0],\n    setPage5 = _React$useState14[1];\n  var _React$useState15 = React.useState(5),\n    _React$useState16 = _slicedToArray(_React$useState15, 2),\n    rowsPerPage5 = _React$useState16[0],\n    setRowsPerPage5 = _React$useState16[1];\n  var emptyRows5 = rowsPerPage5 - Math.min(rowsPerPage5, rows5.length - page5 * rowsPerPage5);\n  function handleChangePage5(event, newPage) {\n    setPage5(newPage);\n  }\n  function handleChangeRowsPerPage5(event) {\n    setRowsPerPage5(parseInt(event.target.value, 10));\n  }\n\n  // Example 6\n  var classes6 = useStyles6();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, \"Data tables display sets of data. They can be fully customized.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/tables/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Table\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, \"A simple example with no frills.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes1.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes1.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 21\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 21\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 21\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 21\n    }\n  }, \"Protein\\xA0(g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 17\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 23\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 23\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 23\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 23\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 23\n      }\n    }, row.protein));\n  }))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Sorting & Selecting\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }\n  }, \"This example demonstrates the use of \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 52\n    }\n  }, \"Checkbox\"), \" and clickable rows for selection, with a custom \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 59\n    }\n  }, \"Toolbar\"), \". It uses the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 27\n    }\n  }, \"TableSortLabel\"), \" component to help style column headings.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes3.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes3.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableToolbar3, {\n    numSelected: selected3.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes3.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes3.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense3 ? \"small\" : \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead3, {\n    numSelected: selected3.length,\n    order: order3,\n    orderBy: orderBy3,\n    onSelectAllClick: handleSelectAllClick3,\n    onRequestSort: handleRequestSort3,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 21\n    }\n  }, stableSort3(rows, getSorting(order3, orderBy3)).slice(page3 * rowsPerPage3, page3 * rowsPerPage3 + rowsPerPage3).map(function (row, index) {\n    var isItemSelected = isSelected3(row.name);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: function onClick(event) {\n        return handleClick3(event, row.name);\n      },\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.name,\n      selected: isItemSelected,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        \"aria-labelledby\": labelId\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 31\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 31\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 31\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 31\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 31\n      }\n    }, row.protein));\n  }), emptyRows3 > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 27\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage3,\n    page: page3,\n    backIconButtonProps: {\n      \"aria-label\": \"Previous Page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"Next Page\"\n    },\n    onChangePage: handleChangePage3,\n    onChangeRowsPerPage: handleChangeRowsPerPage3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: dense3,\n      onChange: handleChangeDense3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 19\n      }\n    }),\n    label: \"Dense padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Custom Table Pagination Action\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 13\n    }\n  }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 19\n    }\n  }, \"Action\"), \" property of the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 15\n    }\n  }, \"TablePagination\"), \" component allows the implementation of custom actions.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes5.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes5.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes5.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 19\n    }\n  }, rows5.slice(page5 * rowsPerPage5, page5 * rowsPerPage5 + rowsPerPage5).map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 27\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 27\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 27\n      }\n    }, row.fat));\n  }), emptyRows5 > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 48 * emptyRows5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    colSpan: 3,\n    count: rows5.length,\n    rowsPerPage: rowsPerPage5,\n    page: page5,\n    SelectProps: {\n      inputProps: {\n        \"aria-label\": \"Rows per page\"\n      },\n      native: true\n    },\n    onChangePage: handleChangePage5,\n    onChangeRowsPerPage: handleChangeRowsPerPage5,\n    ActionsComponent: TablePaginationActions5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Dense Table\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 13\n    }\n  }, \"A simple example of a dense table with no frills.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes2.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes2.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes2.table,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 23\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 23\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 23\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 23\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 23\n    }\n  }, \"Protein\\xA0(g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 19\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 25\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 25\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 25\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 25\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 25\n      }\n    }, row.protein));\n  })))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Customized tables\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 13\n    }\n  }, \"Here is an example of customizing the component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes4.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes4.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell4, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 21\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 21\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 21\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 21\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 21\n    }\n  }, \"Protein\\xA0(g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 17\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(StyledTableRow4, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell4, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 23\n      }\n    }, row.name), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 23\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 23\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 23\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 23\n      }\n    }, row.protein));\n  }))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode6,\n    beforeCodeTitle: \"Spanning Table\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 13\n    }\n  }, \"A simple example with spanning rows & columns.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes6.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes6.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 21\n    }\n  }, \"Desc\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 21\n    }\n  }, \"Qty.\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 21\n    }\n  }, \"@\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 21\n    }\n  }, \"Price\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 17\n    }\n  }, rows6.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.desc,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 23\n      }\n    }, row.desc), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 23\n      }\n    }, row.qty), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 23\n      }\n    }, row.unit), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 23\n      }\n    }, ccyFormat6(row.price)));\n  }), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    rowSpan: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 21\n    }\n  }, \"Subtotal\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 21\n    }\n  }, ccyFormat6(invoiceSubtotal6))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 21\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 21\n    }\n  }, \"\".concat((TAX_RATE * 100).toFixed(0), \" %\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 21\n    }\n  }, ccyFormat6(invoiceTaxes6))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 21\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 21\n    }\n  }, ccyFormat6(invoiceTotal6))))))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n    overflowX: 'auto',\\n  },\\n  table: {\\n    minWidth: 650,\\n  },\\n}));\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n];\\n\\nexport default function SimpleTable() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <Table className={classes.table}>\\n        <TableHead>\\n          <TableRow>\\n            <TableCell>Dessert (100g serving)</TableCell>\\n            <TableCell align=\\\"right\\\">Calories</TableCell>\\n            <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\n            <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\n            <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\n          </TableRow>\\n        </TableHead>\\n        <TableBody>\\n          {rows.map(row => (\\n            <TableRow key={row.name}>\\n              <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                {row.name}\\n              </TableCell>\\n              <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\n            </TableRow>\\n          ))}\\n        </TableBody>\\n      </Table>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n  },\\n  paper: {\\n    marginTop: theme.spacing(3),\\n    width: '100%',\\n    overflowX: 'auto',\\n    marginBottom: theme.spacing(2),\\n  },\\n  table: {\\n    minWidth: 650,\\n  },\\n}));\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n];\\n\\nexport default function DenseTable() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper className={classes.paper}>\\n        <Table className={classes.table} size=\\\"small\\\">\\n          <TableHead>\\n            <TableRow>\\n              <TableCell>Dessert (100g serving)</TableCell>\\n              <TableCell align=\\\"right\\\">Calories</TableCell>\\n              <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\n              <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\n              <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\n            </TableRow>\\n          </TableHead>\\n          <TableBody>\\n            {rows.map(row => (\\n              <TableRow key={row.name}>\\n                <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                  {row.name}\\n                </TableCell>\\n                <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\n              </TableRow>\\n            ))}\\n          </TableBody>\\n        </Table>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport PropTypes from 'prop-types';\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TablePagination from '@material-ui/core/TablePagination';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\\nimport Toolbar from '@material-ui/core/Toolbar';\\nimport Typography from '@material-ui/core/Typography';\\nimport Paper from '@material-ui/core/Paper';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\nimport DeleteIcon from '@material-ui/icons/Delete';\\nimport FilterListIcon from '@material-ui/icons/FilterList';\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Donut', 452, 25.0, 51, 4.9),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\\n  createData('KitKat', 518, 26.0, 65, 7.0),\\n  createData('Lollipop', 392, 0.2, 98, 0.0),\\n  createData('Marshmallow', 318, 0, 81, 2.0),\\n  createData('Nougat', 360, 19.0, 9, 37.0),\\n  createData('Oreo', 437, 18.0, 63, 4.0),\\n];\\n\\nfunction desc(a, b, orderBy) {\\n  if (b[orderBy] < a[orderBy]) {\\n    return -1;\\n  }\\n  if (b[orderBy] > a[orderBy]) {\\n    return 1;\\n  }\\n  return 0;\\n}\\n\\nfunction stableSort(array, cmp) {\\n  const stabilizedThis = array.map((el, index) => [el, index]);\\n  stabilizedThis.sort((a, b) => {\\n    const order = cmp(a[0], b[0]);\\n    if (order !== 0) return order;\\n    return a[1] - b[1];\\n  });\\n  return stabilizedThis.map(el => el[0]);\\n}\\n\\nfunction getSorting(order, orderBy) {\\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\\n}\\n\\nconst headRows = [\\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\\n];\\n\\nfunction EnhancedTableHead(props) {\\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\\n  const createSortHandler = property => event => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        <TableCell padding=\\\"checkbox\\\">\\n          <Checkbox\\n            indeterminate={numSelected > 0 && numSelected < rowCount}\\n            checked={numSelected === rowCount}\\n            onChange={onSelectAllClick}\\n            inputProps={{ 'aria-label': 'Select all desserts' }}\\n          />\\n        </TableCell>\\n        {headRows.map(row => (\\n          <TableCell\\n            key={row.id}\\n            align={row.numeric ? 'right' : 'left'}\\n            padding={row.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === row.id ? order : false}\\n          >\\n            <TableSortLabel\\n              active={orderBy === row.id}\\n              direction={order}\\n              onClick={createSortHandler(row.id)}\\n            >\\n              {row.label}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.string.isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nconst useToolbarStyles = makeStyles(theme => ({\\n  root: {\\n    paddingLeft: theme.spacing(2),\\n    paddingRight: theme.spacing(1),\\n  },\\n  highlight:\\n    theme.palette.type === 'light'\\n      ? {\\n          color: theme.palette.secondary.main,\\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\\n        }\\n      : {\\n          color: theme.palette.text.primary,\\n          backgroundColor: theme.palette.secondary.dark,\\n        },\\n  spacer: {\\n    flex: '1 1 100%',\\n  },\\n  actions: {\\n    color: theme.palette.text.secondary,\\n  },\\n  title: {\\n    flex: '0 0 auto',\\n  },\\n}));\\n\\nconst EnhancedTableToolbar = props => {\\n  const classes = useToolbarStyles();\\n  const { numSelected } = props;\\n\\n  return (\\n    <Toolbar\\n      className={clsx(classes.root, {\\n        [classes.highlight]: numSelected > 0,\\n      })}\\n    >\\n      <div className={classes.title}>\\n        {numSelected > 0 ? (\\n          <Typography color=\\\"inherit\\\" variant=\\\"subtitle1\\\">\\n            {numSelected} selected\\n          </Typography>\\n        ) : (\\n          <Typography variant=\\\"h6\\\" id=\\\"tableTitle\\\">\\n            Nutrition\\n          </Typography>\\n        )}\\n      </div>\\n      <div className={classes.spacer} />\\n      <div className={classes.actions}>\\n        {numSelected > 0 ? (\\n          <Tooltip title=\\\"Delete\\\">\\n            <IconButton aria-label=\\\"Delete\\\">\\n              <DeleteIcon />\\n            </IconButton>\\n          </Tooltip>\\n        ) : (\\n          <Tooltip title=\\\"Filter list\\\">\\n            <IconButton aria-label=\\\"Filter list\\\">\\n              <FilterListIcon />\\n            </IconButton>\\n          </Tooltip>\\n        )}\\n      </div>\\n    </Toolbar>\\n  );\\n};\\n\\nEnhancedTableToolbar.propTypes = {\\n  numSelected: PropTypes.number.isRequired,\\n};\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n  },\\n  paper: {\\n    width: '100%',\\n    marginBottom: theme.spacing(2),\\n  },\\n  table: {\\n    minWidth: 750,\\n  },\\n  tableWrapper: {\\n    overflowX: 'auto',\\n  },\\n}));\\n\\nexport default function EnhancedTable() {\\n  const classes = useStyles();\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState('calories');\\n  const [selected, setSelected] = React.useState([]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(false);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\\n\\n  function handleRequestSort(event, property) {\\n    const isDesc = orderBy === property && order === 'desc';\\n    setOrder(isDesc ? 'asc' : 'desc');\\n    setOrderBy(property);\\n  }\\n\\n  function handleSelectAllClick(event) {\\n    if (event.target.checked) {\\n      const newSelecteds = rows.map(n => n.name);\\n      setSelected(newSelecteds);\\n      return;\\n    }\\n    setSelected([]);\\n  }\\n\\n  function handleClick(event, name) {\\n    const selectedIndex = selected.indexOf(name);\\n    let newSelected = [];\\n\\n    if (selectedIndex === -1) {\\n      newSelected = newSelected.concat(selected, name);\\n    } else if (selectedIndex === 0) {\\n      newSelected = newSelected.concat(selected.slice(1));\\n    } else if (selectedIndex === selected.length - 1) {\\n      newSelected = newSelected.concat(selected.slice(0, -1));\\n    } else if (selectedIndex > 0) {\\n      newSelected = newSelected.concat(\\n        selected.slice(0, selectedIndex),\\n        selected.slice(selectedIndex + 1),\\n      );\\n    }\\n\\n    setSelected(newSelected);\\n  }\\n\\n  function handleChangePage(event, newPage) {\\n    setPage(newPage);\\n  }\\n\\n  function handleChangeRowsPerPage(event) {\\n    setRowsPerPage(+event.target.value);\\n  }\\n\\n  function handleChangeDense(event) {\\n    setDense(event.target.checked);\\n  }\\n\\n  const isSelected = name => selected.indexOf(name) !== -1;\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper className={classes.paper}>\\n        <EnhancedTableToolbar numSelected={selected.length} />\\n        <div className={classes.tableWrapper}>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby=\\\"tableTitle\\\"\\n            size={dense ? 'small' : 'medium'}\\n          >\\n            <EnhancedTableHead\\n              numSelected={selected.length}\\n              order={order}\\n              orderBy={orderBy}\\n              onSelectAllClick={handleSelectAllClick}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n            <TableBody>\\n              {stableSort(rows, getSorting(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  const isItemSelected = isSelected(row.name);\\n                  const labelId = `enhanced-table-checkbox-${index}`;\\n\\n                  return (\\n                    <TableRow\\n                      hover\\n                      onClick={event => handleClick(event, row.name)}\\n                      role=\\\"checkbox\\\"\\n                      aria-checked={isItemSelected}\\n                      tabIndex={-1}\\n                      key={row.name}\\n                      selected={isItemSelected}\\n                    >\\n                      <TableCell padding=\\\"checkbox\\\">\\n                        <Checkbox\\n                          checked={isItemSelected}\\n                          inputProps={{ 'aria-labelledby': labelId }}\\n                        />\\n                      </TableCell>\\n                      <TableCell component=\\\"th\\\" id={labelId} scope=\\\"row\\\" padding=\\\"none\\\">\\n                        {row.name}\\n                      </TableCell>\\n                      <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n                      <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n                      <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\n                      <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{ height: 49 * emptyRows }}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </div>\\n        <TablePagination\\n          rowsPerPageOptions={[5, 10, 25]}\\n          component=\\\"div\\\"\\n          count={rows.length}\\n          rowsPerPage={rowsPerPage}\\n          page={page}\\n          backIconButtonProps={{\\n            'aria-label': 'Previous Page',\\n          }}\\n          nextIconButtonProps={{\\n            'aria-label': 'Next Page',\\n          }}\\n          onChangePage={handleChangePage}\\n          onChangeRowsPerPage={handleChangeRowsPerPage}\\n        />\\n      </Paper>\\n      <FormControlLabel\\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\\n        label=\\\"Dense padding\\\"\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst StyledTableCell = withStyles(theme => ({\\n  head: {\\n    backgroundColor: theme.palette.common.black,\\n    color: theme.palette.common.white,\\n  },\\n  body: {\\n    fontSize: 14,\\n  },\\n}))(TableCell);\\n\\nconst StyledTableRow = withStyles(theme => ({\\n  root: {\\n    '&:nth-of-type(odd)': {\\n      backgroundColor: theme.palette.background.default,\\n    },\\n  },\\n}))(TableRow);\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n    overflowX: 'auto',\\n  },\\n  table: {\\n    minWidth: 700,\\n  },\\n}));\\n\\nexport default function CustomizedTables() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <Table className={classes.table}>\\n        <TableHead>\\n          <TableRow>\\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Calories</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Fat&nbsp;(g)</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Carbs&nbsp;(g)</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Protein&nbsp;(g)</StyledTableCell>\\n          </TableRow>\\n        </TableHead>\\n        <TableBody>\\n          {rows.map(row => (\\n            <StyledTableRow key={row.name}>\\n              <StyledTableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                {row.name}\\n              </StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.calories}</StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.fat}</StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.carbs}</StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.protein}</StyledTableCell>\\n            </StyledTableRow>\\n          ))}\\n        </TableBody>\\n      </Table>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableFooter from '@material-ui/core/TableFooter';\\nimport TablePagination from '@material-ui/core/TablePagination';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\nimport LastPageIcon from '@material-ui/icons/LastPage';\\n\\nconst useStyles1 = makeStyles(theme => ({\\n  root: {\\n    flexShrink: 0,\\n    color: theme.palette.text.secondary,\\n    marginLeft: theme.spacing(2.5),\\n  },\\n}));\\n\\nfunction TablePaginationActions(props) {\\n  const classes = useStyles1();\\n  const theme = useTheme();\\n  const { count, page, rowsPerPage, onChangePage } = props;\\n\\n  function handleFirstPageButtonClick(event) {\\n    onChangePage(event, 0);\\n  }\\n\\n  function handleBackButtonClick(event) {\\n    onChangePage(event, page - 1);\\n  }\\n\\n  function handleNextButtonClick(event) {\\n    onChangePage(event, page + 1);\\n  }\\n\\n  function handleLastPageButtonClick(event) {\\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <IconButton\\n        onClick={handleFirstPageButtonClick}\\n        disabled={page === 0}\\n        aria-label=\\\"First Page\\\"\\n      >\\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\\n      </IconButton>\\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\\\"Previous Page\\\">\\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\\n      </IconButton>\\n      <IconButton\\n        onClick={handleNextButtonClick}\\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\\n        aria-label=\\\"Next Page\\\"\\n      >\\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\\n      </IconButton>\\n      <IconButton\\n        onClick={handleLastPageButtonClick}\\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\\n        aria-label=\\\"Last Page\\\"\\n      >\\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\\n      </IconButton>\\n    </div>\\n  );\\n}\\n\\nTablePaginationActions.propTypes = {\\n  count: PropTypes.number.isRequired,\\n  onChangePage: PropTypes.func.isRequired,\\n  page: PropTypes.number.isRequired,\\n  rowsPerPage: PropTypes.number.isRequired,\\n};\\n\\nfunction createData(name, calories, fat) {\\n  return { name, calories, fat };\\n}\\n\\nconst rows = [\\n  createData('Cupcake', 305, 3.7),\\n  createData('Donut', 452, 25.0),\\n  createData('Eclair', 262, 16.0),\\n  createData('Frozen yoghurt', 159, 6.0),\\n  createData('Gingerbread', 356, 16.0),\\n  createData('Honeycomb', 408, 3.2),\\n  createData('Ice cream sandwich', 237, 9.0),\\n  createData('Jelly Bean', 375, 0.0),\\n  createData('KitKat', 518, 26.0),\\n  createData('Lollipop', 392, 0.2),\\n  createData('Marshmallow', 318, 0),\\n  createData('Nougat', 360, 19.0),\\n  createData('Oreo', 437, 18.0),\\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\\n\\nconst useStyles2 = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n  },\\n  table: {\\n    minWidth: 500,\\n  },\\n  tableWrapper: {\\n    overflowX: 'auto',\\n  },\\n}));\\n\\nexport default function CustomPaginationActionsTable() {\\n  const classes = useStyles2();\\n  const [page, setPage] = React.useState(0);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n\\n  function handleChangePage(event, newPage) {\\n    setPage(newPage);\\n  }\\n\\n  function handleChangeRowsPerPage(event) {\\n    setRowsPerPage(parseInt(event.target.value, 10));\\n  }\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <div className={classes.tableWrapper}>\\n        <Table className={classes.table}>\\n          <TableBody>\\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\\n              <TableRow key={row.name}>\\n                <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                  {row.name}\\n                </TableCell>\\n                <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n              </TableRow>\\n            ))}\\n\\n            {emptyRows > 0 && (\\n              <TableRow style={{ height: 48 * emptyRows }}>\\n                <TableCell colSpan={6} />\\n              </TableRow>\\n            )}\\n          </TableBody>\\n          <TableFooter>\\n            <TableRow>\\n              <TablePagination\\n                rowsPerPageOptions={[5, 10, 25]}\\n                colSpan={3}\\n                count={rows.length}\\n                rowsPerPage={rowsPerPage}\\n                page={page}\\n                SelectProps={{\\n                  inputProps: { 'aria-label': 'Rows per page' },\\n                  native: true,\\n                }}\\n                onChangePage={handleChangePage}\\n                onChangeRowsPerPage={handleChangeRowsPerPage}\\n                ActionsComponent={TablePaginationActions}\\n              />\\n            </TableRow>\\n          </TableFooter>\\n        </Table>\\n      </div>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst TAX_RATE = 0.07;\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n    overflowX: 'auto',\\n  },\\n  table: {\\n    minWidth: 700,\\n  },\\n}));\\n\\nfunction ccyFormat(num) {\\n  return `${num.toFixed(2)}`;\\n}\\n\\nfunction priceRow(qty, unit) {\\n  return qty * unit;\\n}\\n\\nfunction createRow(desc, qty, unit) {\\n  const price = priceRow(qty, unit);\\n  return { desc, qty, unit, price };\\n}\\n\\nfunction subtotal(items) {\\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\\n}\\n\\nconst rows = [\\n  createRow('Paperclips (Box)', 100, 1.15),\\n  createRow('Paper (Case)', 10, 45.99),\\n  createRow('Waste Basket', 2, 17.99),\\n];\\n\\nconst invoiceSubtotal = subtotal(rows);\\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\\n\\nexport default function SpanningTable() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <Table className={classes.table}>\\n        <TableHead>\\n          <TableRow>\\n            <TableCell>Desc</TableCell>\\n            <TableCell align=\\\"right\\\">Qty.</TableCell>\\n            <TableCell align=\\\"right\\\">@</TableCell>\\n            <TableCell align=\\\"right\\\">Price</TableCell>\\n          </TableRow>\\n        </TableHead>\\n        <TableBody>\\n          {rows.map(row => (\\n            <TableRow key={row.desc}>\\n              <TableCell>{row.desc}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.qty}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.unit}</TableCell>\\n              <TableCell align=\\\"right\\\">{ccyFormat(row.price)}</TableCell>\\n            </TableRow>\\n          ))}\\n\\n          <TableRow>\\n            <TableCell rowSpan={3} />\\n            <TableCell colSpan={2}>Subtotal</TableCell>\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceSubtotal)}</TableCell>\\n          </TableRow>\\n          <TableRow>\\n            <TableCell>Tax</TableCell>\\n            <TableCell align=\\\"right\\\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceTaxes)}</TableCell>\\n          </TableRow>\\n          <TableRow>\\n            <TableCell colSpan={2}>Total</TableCell>\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceTotal)}</TableCell>\\n          </TableRow>\\n        </TableBody>\\n      </Table>\\n    </Paper>\\n  );\\n}\\n\";","map":{"version":3,"names":["React","clsx","PropTypes","makeStyles","lighten","withStyles","useTheme","Paper","Table","TableHead","TableRow","TableCell","TableBody","Checkbox","Toolbar","Typography","Tooltip","IconButton","TableSortLabel","TablePagination","Switch","FormControlLabel","TableFooter","DeleteIcon","FilterListIcon","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Notice","KTCodeExample","useStyles1","theme","root","width","marginTop","spacing","overflowX","table","minWidth","createData","name","calories","fat","carbs","protein","rows","useStyles2","paper","marginBottom","desc3","a","b","orderBy","stableSort3","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headRows3","id","numeric","disablePadding","label","EnhancedTableHead3","props","_this","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","padding","indeterminate","checked","onChange","inputProps","row","key","align","sortDirection","active","direction","onClick","propTypes","number","isRequired","func","string","useToolbarStyles3","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar3","classes","className","_defineProperty","_this2","variant","useStyles3","tableWrapper","useStyles4","StyledTableCell4","head","common","black","white","body","fontSize","StyledTableRow4","background","default","useStyles52","useStyles51","flexShrink","marginLeft","TablePaginationActions5","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","disabled","createData5","rows5","TAX_RATE","useStyles6","ccyFormat6","num","concat","toFixed","priceRow6","qty","unit","createRow6","desc","price","subtotal6","items","_ref","reduce","sum","i","rows6","invoiceSubtotal6","invoiceTaxes6","invoiceTotal6","TablesExamplesPage","_this3","classes1","classes2","classes3","_React$useState","useState","_React$useState2","_slicedToArray","order3","setOrder3","_React$useState3","_React$useState4","orderBy3","setOrderBy3","_React$useState5","_React$useState6","selected3","setSelected3","_React$useState7","_React$useState8","page3","setPage3","_React$useState9","_React$useState10","dense3","setDense3","_React$useState11","_React$useState12","rowsPerPage3","setRowsPerPage3","handleRequestSort3","isDesc","handleSelectAllClick3","target","newSelecteds","n","handleClick3","selectedIndex","indexOf","newSelected","slice","length","handleChangePage3","newPage","handleChangeRowsPerPage3","value","handleChangeDense3","isSelected3","emptyRows3","min","classes4","classes5","_React$useState13","_React$useState14","page5","setPage5","_React$useState15","_React$useState16","rowsPerPage5","setRowsPerPage5","emptyRows5","handleChangePage5","handleChangeRowsPerPage5","parseInt","classes6","Fragment","icon","rel","href","jsCode","jsCode1","beforeCodeTitle","codeBlockHeight","component","scope","jsCode3","size","isItemSelected","labelId","hover","role","tabIndex","selected","style","height","colSpan","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangeRowsPerPage","control","jsCode5","SelectProps","native","ActionsComponent","jsCode2","jsCode4","jsCode6","rowSpan"],"sources":["D:/Metronic 7.2.9/theme/react/OnlineShop/src/app/modules/GoogleMaterialExamples/data-displays/TablesExamplesPage.js"],"sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  makeStyles,\r\n  lighten,\r\n  withStyles,\r\n  useTheme\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Checkbox,\r\n  Toolbar,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  TableSortLabel,\r\n  TablePagination,\r\n  Switch,\r\n  FormControlLabel,\r\n  TableFooter\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\n// Example 3\r\nfunction desc3(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort3(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc3(a, b, orderBy)\r\n    : (a, b) => -desc3(a, b, orderBy);\r\n}\r\n\r\nconst headRows3 = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\"\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" }\r\n];\r\n\r\nfunction EnhancedTableHead3(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"Select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headRows3.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? \"right\" : \"left\"}\r\n            padding={row.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar3 = props => {\r\n  const classes = useToolbarStyles3();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst StyledTableCell4 = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow4 = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\n// Example 5\r\nconst useStyles52 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\nconst useStyles51 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5)\r\n  }\r\n}));\r\n\r\nfunction TablePaginationActions5(props) {\r\n  const classes = useStyles51();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"Previous Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions5.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired\r\n};\r\n\r\nfunction createData5(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows5 = [\r\n  createData5(\"Cupcake\", 305, 3.7),\r\n  createData5(\"Donut\", 452, 25.0),\r\n  createData5(\"Eclair\", 262, 16.0),\r\n  createData5(\"Frozen yoghurt\", 159, 6.0),\r\n  createData5(\"Gingerbread\", 356, 16.0),\r\n  createData5(\"Honeycomb\", 408, 3.2),\r\n  createData5(\"Ice cream sandwich\", 237, 9.0),\r\n  createData5(\"Jelly Bean\", 375, 0.0),\r\n  createData5(\"KitKat\", 518, 26.0),\r\n  createData5(\"Lollipop\", 392, 0.2),\r\n  createData5(\"Marshmallow\", 318, 0),\r\n  createData5(\"Nougat\", 360, 19.0),\r\n  createData5(\"Oreo\", 437, 18.0)\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\n// Example 6\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nfunction ccyFormat6(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow6(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow6(desc, qty, unit) {\r\n  const price = priceRow6(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal6(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows6 = [\r\n  createRow6(\"Paperclips (Box)\", 100, 1.15),\r\n  createRow6(\"Paper (Case)\", 10, 45.99),\r\n  createRow6(\"Waste Basket\", 2, 17.99)\r\n];\r\n\r\nconst invoiceSubtotal6 = subtotal6(rows6);\r\nconst invoiceTaxes6 = TAX_RATE * invoiceSubtotal6;\r\nconst invoiceTotal6 = invoiceTaxes6 + invoiceSubtotal6;\r\n\r\nexport default function TablesExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [order3, setOrder3] = React.useState(\"asc\");\r\n  const [orderBy3, setOrderBy3] = React.useState(\"calories\");\r\n  const [selected3, setSelected3] = React.useState([]);\r\n  const [page3, setPage3] = React.useState(0);\r\n  const [dense3, setDense3] = React.useState(false);\r\n  const [rowsPerPage3, setRowsPerPage3] = React.useState(5);\r\n\r\n  function handleRequestSort3(event, property) {\r\n    const isDesc = orderBy3 === property && order3 === \"desc\";\r\n    setOrder3(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy3(property);\r\n  }\r\n\r\n  function handleSelectAllClick3(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected3(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected3([]);\r\n  }\r\n\r\n  function handleClick3(event, name) {\r\n    const selectedIndex = selected3.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected3, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected3.slice(1));\r\n    } else if (selectedIndex === selected3.length - 1) {\r\n      newSelected = newSelected.concat(selected3.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected3.slice(0, selectedIndex),\r\n        selected3.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected3(newSelected);\r\n  }\r\n\r\n  function handleChangePage3(event, newPage) {\r\n    setPage3(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage3(event) {\r\n    setRowsPerPage3(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense3(event) {\r\n    setDense3(event.target.checked);\r\n  }\r\n\r\n  const isSelected3 = name => selected3.indexOf(name) !== -1;\r\n\r\n  const emptyRows3 =\r\n    rowsPerPage3 - Math.min(rowsPerPage3, rows.length - page3 * rowsPerPage3);\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 5\r\n  const classes5 = useStyles52();\r\n  const [page5, setPage5] = React.useState(0);\r\n  const [rowsPerPage5, setRowsPerPage5] = React.useState(5);\r\n\r\n  const emptyRows5 =\r\n    rowsPerPage5 - Math.min(rowsPerPage5, rows5.length - page5 * rowsPerPage5);\r\n\r\n  function handleChangePage5(event, newPage) {\r\n    setPage5(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage5(event) {\r\n    setRowsPerPage5(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Data tables display sets of data. They can be fully customized.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/tables/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes1.root}>\r\n              <Table className={classes1.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Dessert (100g serving)</TableCell>\r\n                    <TableCell align=\"right\">Calories</TableCell>\r\n                    <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Sorting & Selecting\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example demonstrates the use of <code>Checkbox</code> and\r\n              clickable rows for selection, with a custom <code>Toolbar</code>.\r\n              It uses the <code>TableSortLabel</code> component to help style\r\n              column headings.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Paper className={classes3.paper}>\r\n                <EnhancedTableToolbar3 numSelected={selected3.length} />\r\n                <div className={classes3.tableWrapper}>\r\n                  <Table\r\n                    className={classes3.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    size={dense3 ? \"small\" : \"medium\"}\r\n                  >\r\n                    <EnhancedTableHead3\r\n                      numSelected={selected3.length}\r\n                      order={order3}\r\n                      orderBy={orderBy3}\r\n                      onSelectAllClick={handleSelectAllClick3}\r\n                      onRequestSort={handleRequestSort3}\r\n                      rowCount={rows.length}\r\n                    />\r\n                    <TableBody>\r\n                      {stableSort3(rows, getSorting(order3, orderBy3))\r\n                        .slice(\r\n                          page3 * rowsPerPage3,\r\n                          page3 * rowsPerPage3 + rowsPerPage3\r\n                        )\r\n                        .map((row, index) => {\r\n                          const isItemSelected = isSelected3(row.name);\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick3(event, row.name)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.name}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{\r\n                                    \"aria-labelledby\": labelId\r\n                                  }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                              >\r\n                                {row.name}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {row.calories}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.fat}</TableCell>\r\n                              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                              <TableCell align=\"right\">{row.protein}</TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      {emptyRows3 > 0 && (\r\n                        <TableRow style={{ height: 49 * emptyRows3 }}>\r\n                          <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={rows.length}\r\n                  rowsPerPage={rowsPerPage3}\r\n                  page={page3}\r\n                  backIconButtonProps={{\r\n                    \"aria-label\": \"Previous Page\"\r\n                  }}\r\n                  nextIconButtonProps={{\r\n                    \"aria-label\": \"Next Page\"\r\n                  }}\r\n                  onChangePage={handleChangePage3}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage3}\r\n                />\r\n              </Paper>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch checked={dense3} onChange={handleChangeDense3} />\r\n                }\r\n                label=\"Dense padding\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Custom Table Pagination Action\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>Action</code> property of the{\" \"}\r\n              <code>TablePagination</code> component allows the implementation\r\n              of custom actions.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes5.root}>\r\n              <div className={classes5.tableWrapper}>\r\n                <Table className={classes5.table}>\r\n                  <TableBody>\r\n                    {rows5\r\n                      .slice(\r\n                        page5 * rowsPerPage5,\r\n                        page5 * rowsPerPage5 + rowsPerPage5\r\n                      )\r\n                      .map(row => (\r\n                        <TableRow key={row.name}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.calories}</TableCell>\r\n                          <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n\r\n                    {emptyRows5 > 0 && (\r\n                      <TableRow style={{ height: 48 * emptyRows5 }}>\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        colSpan={3}\r\n                        count={rows5.length}\r\n                        rowsPerPage={rowsPerPage5}\r\n                        page={page5}\r\n                        SelectProps={{\r\n                          inputProps: { \"aria-label\": \"Rows per page\" },\r\n                          native: true\r\n                        }}\r\n                        onChangePage={handleChangePage5}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage5}\r\n                        ActionsComponent={TablePaginationActions5}\r\n                      />\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </div>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Dense Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example of a dense table with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Paper className={classes2.paper}>\r\n                <Table className={classes2.table} size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Dessert (100g serving)</TableCell>\r\n                      <TableCell align=\"right\">Calories</TableCell>\r\n                      <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows.map(row => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Paper>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Customized tables\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes4.root}>\r\n              <Table className={classes4.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell4>Dessert (100g serving)</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">Calories</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Fat&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Carbs&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Protein&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <StyledTableRow4 key={row.name}>\r\n                      <StyledTableCell4 component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.calories}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.fat}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.carbs}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.protein}\r\n                      </StyledTableCell4>\r\n                    </StyledTableRow4>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Spanning Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with spanning rows & columns.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes6.root}>\r\n              <Table className={classes6.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Desc</TableCell>\r\n                    <TableCell align=\"right\">Qty.</TableCell>\r\n                    <TableCell align=\"right\">@</TableCell>\r\n                    <TableCell align=\"right\">Price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows6.map(row => (\r\n                    <TableRow key={row.desc}>\r\n                      <TableCell>{row.desc}</TableCell>\r\n                      <TableCell align=\"right\">{row.qty}</TableCell>\r\n                      <TableCell align=\"right\">{row.unit}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {ccyFormat6(row.price)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                  <TableRow>\r\n                    <TableCell rowSpan={3} />\r\n                    <TableCell colSpan={2}>Subtotal</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceSubtotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Tax</TableCell>\r\n                    <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(\r\n                      0\r\n                    )} %`}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTaxes6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>Total</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Table className={classes.table} size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headRows = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'Select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, name) {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense(event) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = \\`enhanced-table-checkbox-\\${index}\\`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'Rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nfunction ccyFormat(num) {\r\n  return \\`\\${num.toFixed(2)}\\`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">@</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{\\`\\${(TAX_RATE * 100).toFixed(0)} %\\`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}