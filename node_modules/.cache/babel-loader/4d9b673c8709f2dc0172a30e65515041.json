{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Saeed\\\\Desktop\\\\onlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Saeed\\\\Desktop\\\\onlineShop\\\\src\\\\_metronic\\\\layout\\\\_core\\\\MetronicSplashScreen.js\";\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nvar MetronicSplashScreenContext = createContext();\nexport function MetronicSplashScreenProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var visible = count > 0;\n  useEffect(function () {\n    var splashScreen = document.getElementById(\"splash-screen\");\n\n    // Show SplashScreen\n    if (splashScreen && visible) {\n      splashScreen.classList.remove(\"hidden\");\n      return function () {\n        splashScreen.classList.add(\"hidden\");\n      };\n    }\n\n    // Hide SplashScreen\n    var timeout;\n    if (splashScreen && !visible) {\n      timeout = setTimeout(function () {\n        splashScreen.classList.add(\"hidden\");\n      }, 3000);\n    }\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(MetronicSplashScreenContext.Provider, {\n    value: setCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function LayoutSplashScreen(_ref2) {\n  var _ref2$visible = _ref2.visible,\n    visible = _ref2$visible === void 0 ? true : _ref2$visible;\n  // Everything are ready - remove splashscreen\n  var setCount = useContext(MetronicSplashScreenContext);\n  useEffect(function () {\n    if (!visible) {\n      return;\n    }\n    setCount(function (prev) {\n      return prev + 1;\n    });\n    return function () {\n      setCount(function (prev) {\n        return prev - 1;\n      });\n    };\n  }, [setCount, visible]);\n  return null;\n}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","MetronicSplashScreenContext","MetronicSplashScreenProvider","_ref","children","_useState","_useState2","_slicedToArray","count","setCount","visible","splashScreen","document","getElementById","classList","remove","add","timeout","setTimeout","clearTimeout","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","LayoutSplashScreen","_ref2","_ref2$visible","prev"],"sources":["C:/Users/Saeed/Desktop/onlineShop/src/_metronic/layout/_core/MetronicSplashScreen.js"],"sourcesContent":["import React, {createContext, useContext, useState, useEffect} from \"react\";\r\n\r\nconst MetronicSplashScreenContext = createContext();\r\n\r\nexport function MetronicSplashScreenProvider({ children }) {\r\n  const [count, setCount] = useState(0);\r\n  let visible = count > 0;\r\n\r\n  useEffect(() => {\r\n    const splashScreen = document.getElementById(\"splash-screen\");\r\n\r\n    // Show SplashScreen\r\n    if (splashScreen && visible) {\r\n      splashScreen.classList.remove(\"hidden\");\r\n\r\n      return () => {\r\n        splashScreen.classList.add(\"hidden\");\r\n      };\r\n    }\r\n\r\n    // Hide SplashScreen\r\n    let timeout;\r\n    if (splashScreen && !visible) {\r\n      timeout = setTimeout(() => {\r\n        splashScreen.classList.add(\"hidden\");\r\n      }, 3000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [visible]);\r\n\r\n  return (\r\n    <MetronicSplashScreenContext.Provider value={setCount}>\r\n      {children}\r\n    </MetronicSplashScreenContext.Provider>\r\n  );\r\n}\r\n\r\nexport function LayoutSplashScreen({ visible = true }) {\r\n  // Everything are ready - remove splashscreen\r\n  const setCount = useContext(MetronicSplashScreenContext);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      return;\r\n    }\r\n\r\n    setCount(prev => {\r\n      return prev + 1;\r\n    });\r\n\r\n    return () => {\r\n      setCount(prev => {\r\n        return prev - 1;\r\n      });\r\n    };\r\n  }, [setCount, visible]);\r\n\r\n  return null;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAE3E,IAAMC,2BAA2B,GAAGJ,aAAa,CAAC,CAAC;AAEnD,OAAO,SAASK,4BAA4BA,CAAAC,IAAA,EAAe;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrD,IAAAC,SAAA,GAA0BN,QAAQ,CAAC,CAAC,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAII,OAAO,GAAGF,KAAK,GAAG,CAAC;EAEvBR,SAAS,CAAC,YAAM;IACd,IAAMW,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;;IAE7D;IACA,IAAIF,YAAY,IAAID,OAAO,EAAE;MAC3BC,YAAY,CAACG,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;MAEvC,OAAO,YAAM;QACXJ,YAAY,CAACG,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MACtC,CAAC;IACH;;IAEA;IACA,IAAIC,OAAO;IACX,IAAIN,YAAY,IAAI,CAACD,OAAO,EAAE;MAC5BO,OAAO,GAAGC,UAAU,CAAC,YAAM;QACzBP,YAAY,CAACG,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,OAAO,YAAM;MACXG,YAAY,CAACF,OAAO,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,oBACEd,KAAA,CAAAwB,aAAA,CAACnB,2BAA2B,CAACoB,QAAQ;IAACC,KAAK,EAAEb,QAAS;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnDxB,QACmC,CAAC;AAE3C;AAEA,OAAO,SAASyB,kBAAkBA,CAAAC,KAAA,EAAqB;EAAA,IAAAC,aAAA,GAAAD,KAAA,CAAlBpB,OAAO;IAAPA,OAAO,GAAAqB,aAAA,cAAG,IAAI,GAAAA,aAAA;EACjD;EACA,IAAMtB,QAAQ,GAAGX,UAAU,CAACG,2BAA2B,CAAC;EAExDD,SAAS,CAAC,YAAM;IACd,IAAI,CAACU,OAAO,EAAE;MACZ;IACF;IAEAD,QAAQ,CAAC,UAAAuB,IAAI,EAAI;MACf,OAAOA,IAAI,GAAG,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO,YAAM;MACXvB,QAAQ,CAAC,UAAAuB,IAAI,EAAI;QACf,OAAOA,IAAI,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACvB,QAAQ,EAAEC,OAAO,CAAC,CAAC;EAEvB,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module"}