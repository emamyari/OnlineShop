{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\src\\\\_metronic\\\\_partials\\\\controls\\\\code-examples\\\\CodeBlockToolbar.js\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport copy from \"clipboard-copy\";\nimport { Tooltip } from \"@material-ui/core\";\nexport function CodeBlockToolbar(_ref) {\n  var _ref$showViewCode = _ref.showViewCode,\n    showViewCode = _ref$showViewCode === void 0 ? false : _ref$showViewCode,\n    code = _ref.code,\n    isCodeBlockShown = _ref.isCodeBlockShown,\n    setIsCodeBlockShown = _ref.setIsCodeBlockShown;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isCopySucceed = _useState2[0],\n    setIsCopySucceed = _useState2[1];\n  var copyCode = function copyCode() {\n    copy(code).then(function () {\n      setIsCopySucceed(true);\n      setTimeout(function () {\n        setIsCopySucceed(false);\n      }, 2000);\n    });\n  };\n  var toggleShowCode = function toggleShowCode() {\n    setIsCodeBlockShown(!isCodeBlockShown);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showViewCode && /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"\".concat(isCodeBlockShown ? \"\" : \"View code\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"example-toggle \".concat(clsx({\n      \"example-toggled\": isCodeBlockShown\n    })),\n    onClick: toggleShowCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Copy code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"example-copy \".concat(clsx({\n      \"example-copied\": isCopySucceed\n    })),\n    onClick: copyCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","clsx","copy","Tooltip","CodeBlockToolbar","_ref","_ref$showViewCode","showViewCode","code","isCodeBlockShown","setIsCodeBlockShown","_useState","_useState2","_slicedToArray","isCopySucceed","setIsCopySucceed","copyCode","then","setTimeout","toggleShowCode","createElement","Fragment","title","concat","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick"],"sources":["C:/Users/Emamyari/Desktop/metapp/demo2/src/_metronic/_partials/controls/code-examples/CodeBlockToolbar.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport copy from \"clipboard-copy\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\n\r\nexport function CodeBlockToolbar({\r\n  showViewCode = false,\r\n  code,\r\n  isCodeBlockShown,\r\n  setIsCodeBlockShown\r\n}) {\r\n  const [isCopySucceed, setIsCopySucceed] = useState(false);\r\n  const copyCode = () => {\r\n    copy(code).then(() => {\r\n      setIsCopySucceed(true);\r\n      setTimeout(() => {\r\n        setIsCopySucceed(false);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const toggleShowCode = () => {\r\n    setIsCodeBlockShown(!isCodeBlockShown);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showViewCode && (\r\n        <Tooltip title={`${isCodeBlockShown ? \"\" : \"View code\"}`}>\r\n          <span\r\n            className={`example-toggle ${clsx({\r\n              \"example-toggled\": isCodeBlockShown\r\n            })}`}\r\n            onClick={toggleShowCode}\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      <Tooltip title=\"Copy code\">\r\n        <span\r\n          className={`example-copy ${clsx({\r\n            \"example-copied\": isCopySucceed\r\n          })}`}\r\n          onClick={copyCode}\r\n        />\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,SAAQC,OAAO,QAAO,mBAAmB;AAEzC,OAAO,SAASC,gBAAgBA,CAAAC,IAAA,EAK7B;EAAA,IAAAC,iBAAA,GAAAD,IAAA,CAJDE,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,KAAK,GAAAA,iBAAA;IACpBE,IAAI,GAAAH,IAAA,CAAJG,IAAI;IACJC,gBAAgB,GAAAJ,IAAA,CAAhBI,gBAAgB;IAChBC,mBAAmB,GAAAL,IAAA,CAAnBK,mBAAmB;EAEnB,IAAAC,SAAA,GAA0CX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBd,IAAI,CAACM,IAAI,CAAC,CAACS,IAAI,CAAC,YAAM;MACpBF,gBAAgB,CAAC,IAAI,CAAC;MACtBG,UAAU,CAAC,YAAM;QACfH,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BT,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EACxC,CAAC;EAED,oBACEV,KAAA,CAAAqB,aAAA,CAAArB,KAAA,CAAAsB,QAAA,QACGd,YAAY,iBACXR,KAAA,CAAAqB,aAAA,CAACjB,OAAO;IAACmB,KAAK,KAAAC,MAAA,CAAKd,gBAAgB,GAAG,EAAE,GAAG,WAAW,CAAG;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvD9B,KAAA,CAAAqB,aAAA;IACEU,SAAS,oBAAAP,MAAA,CAAoBtB,IAAI,CAAC;MAChC,iBAAiB,EAAEQ;IACrB,CAAC,CAAC,CAAG;IACLsB,OAAO,EAAEZ,cAAe;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzB,CACM,CACV,eACD9B,KAAA,CAAAqB,aAAA,CAACjB,OAAO;IAACmB,KAAK,EAAC,WAAW;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB9B,KAAA,CAAAqB,aAAA;IACEU,SAAS,kBAAAP,MAAA,CAAkBtB,IAAI,CAAC;MAC9B,gBAAgB,EAAEa;IACpB,CAAC,CAAC,CAAG;IACLiB,OAAO,EAAEf,QAAS;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CACM,CACT,CAAC;AAEP"},"metadata":{},"sourceType":"module"}