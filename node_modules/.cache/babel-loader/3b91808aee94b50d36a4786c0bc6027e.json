{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Metronic 7.2.9\\\\theme\\\\react\\\\OnlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"D:\\\\Metronic 7.2.9\\\\theme\\\\react\\\\OnlineShop\\\\src\\\\_metronic\\\\_helpers\\\\TableRowSelectionHelpers.js\";\nimport React from \"react\";\nfunction SelectionCheckbox(_ref) {\n  var isSelected = _ref.isSelected,\n    onChange = _ref.onChange;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox checkbox-single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isSelected,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  })));\n}\nfunction groupingItemOnSelect(props) {\n  var ids = props.ids,\n    setIds = props.setIds,\n    customerId = props.customerId;\n  if (ids.some(function (id) {\n    return id === customerId;\n  })) {\n    setIds(ids.filter(function (id) {\n      return id !== customerId;\n    }));\n  } else {\n    var newIds = _toConsumableArray(ids);\n    newIds.push(customerId);\n    setIds(newIds);\n  }\n}\nfunction groupingAllOnSelect(props) {\n  var isSelected = props.isSelected,\n    setIds = props.setIds,\n    entities = props.entities;\n  if (!isSelected) {\n    var allIds = [];\n    entities.forEach(function (el) {\n      return allIds.push(el.id);\n    });\n    setIds(allIds);\n  } else {\n    setIds([]);\n  }\n  return isSelected;\n}\n\n// check official documentations: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Row%20Selection&selectedStory=Custom%20Selection%20Column%20Header%20Style&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\nexport function getSelectRow(props) {\n  var _this = this;\n  var entities = props.entities,\n    ids = props.ids,\n    setIds = props.setIds;\n  return {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    hideSelectAll: false,\n    selectionHeaderRenderer: function selectionHeaderRenderer() {\n      var isSelected = entities && entities.length > 0 && entities.length === ids.length;\n      var props = {\n        isSelected: isSelected,\n        entities: entities,\n        setIds: setIds\n      };\n      return /*#__PURE__*/React.createElement(SelectionCheckbox, {\n        isSelected: isSelected,\n        onChange: function onChange() {\n          return groupingAllOnSelect(props);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      });\n    },\n    selectionRenderer: function selectionRenderer(_ref2) {\n      var rowIndex = _ref2.rowIndex;\n      var isSelected = ids.some(function (el) {\n        return el === entities[rowIndex].id;\n      });\n      var props = {\n        ids: ids,\n        setIds: setIds,\n        customerId: entities[rowIndex].id\n      };\n      return /*#__PURE__*/React.createElement(SelectionCheckbox, {\n        isSelected: isSelected,\n        onChange: function onChange() {\n          return groupingItemOnSelect(props);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n}","map":{"version":3,"names":["React","SelectionCheckbox","_ref","isSelected","onChange","createElement","Fragment","type","style","display","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","checked","groupingItemOnSelect","props","ids","setIds","customerId","some","id","filter","newIds","_toConsumableArray","push","groupingAllOnSelect","entities","allIds","forEach","el","getSelectRow","_this","mode","clickToSelect","hideSelectAll","selectionHeaderRenderer","length","selectionRenderer","_ref2","rowIndex"],"sources":["D:/Metronic 7.2.9/theme/react/OnlineShop/src/_metronic/_helpers/TableRowSelectionHelpers.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction SelectionCheckbox({ isSelected, onChange }) {\r\n  return (\r\n    <>\r\n      <input type=\"checkbox\" style={{ display: \"none\" }} />\r\n      <label className=\"checkbox checkbox-single\">\r\n        <input type=\"checkbox\" checked={isSelected} onChange={onChange} />\r\n        <span />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction groupingItemOnSelect(props) {\r\n  const { ids, setIds, customerId } = props;\r\n  if (ids.some((id) => id === customerId)) {\r\n    setIds(ids.filter((id) => id !== customerId));\r\n  } else {\r\n    const newIds = [...ids];\r\n    newIds.push(customerId);\r\n    setIds(newIds);\r\n  }\r\n}\r\n\r\nfunction groupingAllOnSelect(props) {\r\n  const { isSelected, setIds, entities } = props;\r\n  if (!isSelected) {\r\n    const allIds = [];\r\n    entities.forEach((el) => allIds.push(el.id));\r\n    setIds(allIds);\r\n  } else {\r\n    setIds([]);\r\n  }\r\n\r\n  return isSelected;\r\n}\r\n\r\n// check official documentations: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Row%20Selection&selectedStory=Custom%20Selection%20Column%20Header%20Style&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nexport function getSelectRow(props) {\r\n  const { entities, ids, setIds } = props;\r\n  return {\r\n    mode: \"checkbox\",\r\n    clickToSelect: true,\r\n    hideSelectAll: false,\r\n    selectionHeaderRenderer: () => {\r\n      const isSelected =\r\n        entities && entities.length > 0 && entities.length === ids.length;\r\n      const props = { isSelected, entities, setIds };\r\n      return (\r\n        <SelectionCheckbox\r\n          isSelected={isSelected}\r\n          onChange={() => groupingAllOnSelect(props)}\r\n        />\r\n      );\r\n    },\r\n    selectionRenderer: ({ rowIndex }) => {\r\n      const isSelected = ids.some((el) => el === entities[rowIndex].id);\r\n      const props = { ids, setIds, customerId: entities[rowIndex].id };\r\n      return (\r\n        <SelectionCheckbox\r\n          isSelected={isSelected}\r\n          onChange={() => groupingItemOnSelect(props)}\r\n        />\r\n      );\r\n    },\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}