{"ast":null,"code":"/* global DOMException */\n\nmodule.exports = clipboardCopy;\nfunction clipboardCopy(text) {\n  // Use the Async Clipboard API when available. Requires a secure browing\n  // context (i.e. HTTPS)\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text).catch(function (err) {\n      throw err !== undefined ? err : new DOMException('The request is not allowed', 'NotAllowedError');\n    });\n  }\n\n  // ...Otherwise, use document.execCommand() fallback\n\n  // Put the text to copy into a <span>\n  var span = document.createElement('span');\n  span.textContent = text;\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre';\n\n  // Add the <span> to the page\n  document.body.appendChild(span);\n\n  // Make a selection object representing the range of text selected by the user\n  var selection = window.getSelection();\n  var range = window.document.createRange();\n  selection.removeAllRanges();\n  range.selectNode(span);\n  selection.addRange(range);\n\n  // Copy text to the clipboard\n  var success = false;\n  try {\n    success = window.document.execCommand('copy');\n  } catch (err) {\n    console.log('error', err);\n  }\n\n  // Cleanup\n  selection.removeAllRanges();\n  window.document.body.removeChild(span);\n  return success ? Promise.resolve() : Promise.reject(new DOMException('The request is not allowed', 'NotAllowedError'));\n}","map":null,"metadata":{},"sourceType":"script"}