{"ast":null,"code":"var _jsxFileName = \"D:\\\\Metronic 7.2.9\\\\theme\\\\react\\\\OnlineShop\\\\src\\\\app\\\\modules\\\\ECommerce\\\\pages\\\\products\\\\product-remarks\\\\remark-edit-dialog\\\\RemarkEditDialog.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\nimport { RemarkEditForm } from \"./RemarkEditForm\";\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\nfunction getFormattedDate(date) {\n  if (typeof date === \"string\") {\n    return date;\n  }\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : \"0\" + month;\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : \"0\" + day;\n  return month + \"/\" + day + \"/\" + year;\n}\nexport function RemarkEditDialog() {\n  // Remarks UI Context\n  var remarksUIContext = useRemarksUIContext();\n  var remarksUIProps = useMemo(function () {\n    return {\n      id: remarksUIContext.selectedId,\n      setIds: remarksUIContext.setIds,\n      productId: remarksUIContext.productId,\n      queryParams: remarksUIContext.queryParams,\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\n      initRemark: remarksUIContext.initRemark\n    };\n  }, [remarksUIContext]);\n\n  // Remarks Redux state\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return {\n        actionsLoading: state.remarks.actionsLoading,\n        remarkForEdit: state.remarks.remarkForEdit\n      };\n    }, shallowEqual),\n    actionsLoading = _useSelector.actionsLoading,\n    remarkForEdit = _useSelector.remarkForEdit;\n  useEffect(function () {\n    // server request for getting remark by seleted id\n    dispatch(actions.fetchRemark(remarksUIProps.id));\n  }, [remarksUIProps.id, dispatch]);\n  var saveRemark = function saveRemark(remark) {\n    remark.dueDate = getFormattedDate(remark.dueDate);\n    if (!remarksUIProps.id) {\n      // server request for creating remarks\n      dispatch(actions.createRemark(remark)).then(function () {\n        // refresh list after deletion\n        dispatch(actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)).then(function () {\n          // clear selections list\n          remarksUIProps.setIds([]);\n          // closing edit modal\n          remarksUIProps.closeEditRemarkDialog();\n        });\n      });\n    } else {\n      // server request for updating remarks\n      dispatch(actions.updateRemark(remark)).then(function () {\n        // refresh list after deletion\n        dispatch(\n        // refresh list after deletion\n        actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)).then(function () {\n          // clear selections list\n          remarksUIProps.setIds([]);\n          // closing edit modal\n          remarksUIProps.closeEditRemarkDialog();\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: remarksUIProps.showEditRemarkDialog,\n    onHide: remarksUIProps.closeEditRemarkDialog,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RemarkEditDialogHeader, {\n    id: remarksUIProps.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RemarkEditForm, {\n    saveRemark: saveRemark,\n    actionsLoading: actionsLoading,\n    remark: remarkForEdit || remarksUIProps.initRemark,\n    onHide: remarksUIProps.closeEditRemarkDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useEffect","useMemo","Modal","shallowEqual","useDispatch","useSelector","actions","RemarkEditDialogHeader","RemarkEditForm","useRemarksUIContext","getFormattedDate","date","year","getFullYear","month","getMonth","toString","length","day","getDate","RemarkEditDialog","remarksUIContext","remarksUIProps","id","selectedId","setIds","productId","queryParams","showEditRemarkDialog","closeEditRemarkDialog","initRemark","dispatch","_useSelector","state","actionsLoading","remarks","remarkForEdit","fetchRemark","saveRemark","remark","dueDate","createRemark","then","fetchRemarks","updateRemark","createElement","show","onHide","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Metronic 7.2.9/theme/react/OnlineShop/src/app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\r\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\r\nimport { RemarkEditForm } from \"./RemarkEditForm\";\r\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\r\n\r\nfunction getFormattedDate(date) {\r\n  if (typeof date === \"string\") {\r\n    return date;\r\n  }\r\n\r\n  var year = date.getFullYear();\r\n\r\n  var month = (1 + date.getMonth()).toString();\r\n  month = month.length > 1 ? month : \"0\" + month;\r\n\r\n  var day = date.getDate().toString();\r\n  day = day.length > 1 ? day : \"0\" + day;\r\n\r\n  return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nexport function RemarkEditDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\r\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\r\n      initRemark: remarksUIContext.initRemark,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, remarkForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.remarks.actionsLoading,\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting remark by seleted id\r\n    dispatch(actions.fetchRemark(remarksUIProps.id));\r\n  }, [remarksUIProps.id, dispatch]);\r\n\r\n  const saveRemark = (remark) => {\r\n    remark.dueDate = getFormattedDate(remark.dueDate);\r\n    if (!remarksUIProps.id) {\r\n      // server request for creating remarks\r\n      dispatch(actions.createRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    } else {\r\n      // server request for updating remarks\r\n      dispatch(actions.updateRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          // refresh list after deletion\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showEditRemarkDialog}\r\n      onHide={remarksUIProps.closeEditRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\r\n      <RemarkEditForm\r\n        saveRemark={saveRemark}\r\n        actionsLoading={actionsLoading}\r\n        remark={remarkForEdit || remarksUIProps.initRemark}\r\n        onHide={remarksUIProps.closeEditRemarkDialog}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}