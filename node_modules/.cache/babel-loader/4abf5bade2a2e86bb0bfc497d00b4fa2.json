{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\src\\\\app\\\\modules\\\\GoogleMaterialExamples\\\\feedback\\\\DialogsExamplesPage.js\",\n  _this2 = this;\nvar _excluded = [\"onClose\", \"selectedValue\"],\n  _excluded2 = [\"onClose\", \"value\", \"open\"];\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Draggable from \"react-draggable\";\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Dialog, DialogTitle, List, ListItem, ListItemAvatar, Avatar, ListItemText, Typography, Button, DialogActions, DialogContent, DialogContentText, Slide, TextField, IconButton, AppBar, Toolbar, Divider, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Switch, useMediaQuery, RadioGroup, Radio, Paper } from \"@material-ui/core\";\nimport { blue } from \"@material-ui/core/colors\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\n\n// Example 1\nvar emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nvar useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\nfunction SimpleDialog(props) {\n  var _this = this;\n  var classes = useStyles();\n  var onClose = props.onClose,\n    selectedValue = props.selectedValue,\n    other = _objectWithoutProperties(props, _excluded);\n  function handleClose() {\n    onClose(selectedValue);\n  }\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\"\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Set backup account\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, emails.map(function (email) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return handleListItemClick(email);\n      },\n      key: email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PersonIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: function onClick() {\n      return handleListItemClick(\"addAccount\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"add account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))));\n}\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  selectedValue: PropTypes.string\n};\n\n// Example 3\nvar Transition3 = React.forwardRef(function Transition5(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }));\n});\n\n// Example 5\nvar styles5 = function styles5(theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  };\n};\nvar DialogTitle5 = withStyles(styles5)(function (props) {\n  var children = props.children,\n    classes = props.classes,\n    onClose = props.onClose;\n  return /*#__PURE__*/React.createElement(DialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })) : null);\n});\nvar DialogContent5 = withStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    }\n  };\n})(DialogContent);\nvar DialogActions5 = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  };\n})(DialogActions);\n\n// Example 6\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    appBar: {\n      position: \"relative\"\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    }\n  };\n});\nvar Transition6 = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 10\n    }\n  }));\n});\n\n// Example 7\nvar useStyles7 = makeStyles(function (theme) {\n  return {\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: \"auto\",\n      width: \"fit-content\"\n    },\n    formControl: {\n      marginTop: theme.spacing(2),\n      minWidth: 120\n    },\n    formControlLabel: {\n      marginTop: theme.spacing(1)\n    }\n  };\n});\n\n// Example 9\nvar options9 = [\"None\", \"Atria\", \"Callisto\", \"Dione\", \"Ganymede\", \"Hangouts Call\", \"Luna\", \"Oberon\", \"Phobos\", \"Pyxis\", \"Sedna\", \"Titania\", \"Triton\", \"Umbriel\"];\nfunction ConfirmationDialogRaw9(props) {\n  var _this3 = this;\n  var onClose = props.onClose,\n    valueProp = props.value,\n    open = props.open,\n    other = _objectWithoutProperties(props, _excluded2);\n  var _React$useState = React.useState(valueProp),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var radioGroupRef = React.useRef(null);\n  React.useEffect(function () {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n  function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  }\n  function handleCancel() {\n    onClose();\n  }\n  function handleOk() {\n    onClose(value);\n  }\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"xs\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"confirmation-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, \"Phone Ringtone\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    ref: radioGroupRef,\n    \"aria-label\": \"Ringtone\",\n    name: \"ringtone\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, options9.map(function (option) {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: option,\n      key: option,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 24\n        }\n      }),\n      label: option,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleCancel,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOk,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, \"Ok\")));\n}\nConfirmationDialogRaw9.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nvar useStyles9 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    paper: {\n      width: \"80%\",\n      maxHeight: 435\n    }\n  };\n});\n\n// Example 11\nfunction PaperComponent11(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }\n  })));\n}\nexport default function DialogsExamplesPage() {\n  // Example 1\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    open = _React$useState4[0],\n    setOpen = _React$useState4[1];\n  var _React$useState5 = React.useState(emails[1]),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selectedValue = _React$useState6[0],\n    setSelectedValue = _React$useState6[1];\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Example 2\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    open2 = _React$useState8[0],\n    setOpen2 = _React$useState8[1];\n  function handleClickOpen2() {\n    setOpen2(true);\n  }\n  function handleClose2() {\n    setOpen2(false);\n  }\n\n  // Example 3\n  var _React$useState9 = React.useState(false),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    open3 = _React$useState10[0],\n    setOpen3 = _React$useState10[1];\n  function handleClickOpen3() {\n    setOpen3(true);\n  }\n  function handleClose3() {\n    setOpen3(false);\n  }\n\n  // Example 4\n  var _React$useState11 = React.useState(false),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    open4 = _React$useState12[0],\n    setOpen4 = _React$useState12[1];\n  function handleClickOpen4() {\n    setOpen4(true);\n  }\n  function handleClose4() {\n    setOpen4(false);\n  }\n\n  // Example 5\n  var _React$useState13 = React.useState(false),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    open5 = _React$useState14[0],\n    setOpen5 = _React$useState14[1];\n  function handleClickOpen5() {\n    setOpen5(true);\n  }\n  function handleClose5() {\n    setOpen5(false);\n  }\n\n  // Example 6\n  var classes6 = useStyles6();\n  var _React$useState15 = React.useState(false),\n    _React$useState16 = _slicedToArray(_React$useState15, 2),\n    open6 = _React$useState16[0],\n    setOpen6 = _React$useState16[1];\n  function handleClickOpen6() {\n    setOpen6(true);\n  }\n  function handleClose6() {\n    setOpen6(false);\n  }\n\n  // Example 7\n  var classes7 = useStyles7();\n  var _React$useState17 = React.useState(false),\n    _React$useState18 = _slicedToArray(_React$useState17, 2),\n    open7 = _React$useState18[0],\n    setOpen7 = _React$useState18[1];\n  var _React$useState19 = React.useState(true),\n    _React$useState20 = _slicedToArray(_React$useState19, 2),\n    fullWidth7 = _React$useState20[0],\n    setFullWidth7 = _React$useState20[1];\n  var _React$useState21 = React.useState(\"sm\"),\n    _React$useState22 = _slicedToArray(_React$useState21, 2),\n    maxWidth7 = _React$useState22[0],\n    setMaxWidth7 = _React$useState22[1];\n  function handleClickOpen7() {\n    setOpen7(true);\n  }\n  function handleClose7() {\n    setOpen7(false);\n  }\n  function handleMaxWidthChange7(event) {\n    setMaxWidth7(event.target.value);\n  }\n  function handleFullWidthChange7(event) {\n    setFullWidth7(event.target.checked);\n  }\n\n  // Example 8\n  var _React$useState23 = React.useState(false),\n    _React$useState24 = _slicedToArray(_React$useState23, 2),\n    open8 = _React$useState24[0],\n    setOpen8 = _React$useState24[1];\n  var theme8 = useTheme();\n  var fullScreen8 = useMediaQuery(theme8.breakpoints.down(\"sm\"));\n  function handleClickOpen8() {\n    setOpen8(true);\n  }\n  function handleClose8() {\n    setOpen8(false);\n  }\n\n  // Example 9\n  var classes9 = useStyles9();\n  var _React$useState25 = React.useState(false),\n    _React$useState26 = _slicedToArray(_React$useState25, 2),\n    open9 = _React$useState26[0],\n    setOpen9 = _React$useState26[1];\n  var _React$useState27 = React.useState(\"Dione\"),\n    _React$useState28 = _slicedToArray(_React$useState27, 2),\n    value9 = _React$useState28[0],\n    setValue9 = _React$useState28[1];\n  function handleClickListItem9() {\n    setOpen9(true);\n  }\n  function handleClose9(newValue) {\n    setOpen9(false);\n    if (newValue) {\n      setValue9(newValue);\n    }\n  }\n\n  // Example 10\n  var _React$useState29 = React.useState(false),\n    _React$useState30 = _slicedToArray(_React$useState29, 2),\n    open10 = _React$useState30[0],\n    setOpen10 = _React$useState30[1];\n  var _React$useState31 = React.useState(\"paper\"),\n    _React$useState32 = _slicedToArray(_React$useState31, 2),\n    scroll10 = _React$useState32[0],\n    setScroll10 = _React$useState32[1];\n  var handleClickOpen10 = function handleClickOpen10(scrollType) {\n    return function () {\n      setOpen10(true);\n      setScroll10(scrollType);\n    };\n  };\n  function handleClose10() {\n    setOpen10(false);\n  }\n\n  // Example 11\n  var _React$useState33 = React.useState(false),\n    _React$useState34 = _slicedToArray(_React$useState33, 2),\n    open11 = _React$useState34[0],\n    setOpen11 = _React$useState34[1];\n  var handleClickOpen11 = function handleClickOpen11() {\n    setOpen11(true);\n  };\n  var handleClose11 = function handleClose11() {\n    setOpen11(false);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, \"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/dialogs/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Dialogs\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, \"Simple dialogs can provide additional details or actions about a list item. For example, they can display avatars, icons, clarifying subtext, or orthogonal actions (such as adding an account).\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 15\n    }\n  }, \"Selected: \", selectedValue), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 15\n    }\n  }, \"Open simple dialog\"), /*#__PURE__*/React.createElement(SimpleDialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Transitions\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }\n  }, \"You can also swap out the transition, the next example uses\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 15\n    }\n  }, \"Slide\"), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 15\n    }\n  }, \"Slide in alert dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open3,\n    TransitionComponent: Transition3,\n    keepMounted: true,\n    onClose: handleClose3,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 17\n    }\n  }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 19\n    }\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose3,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 19\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose3,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 19\n    }\n  }, \"Agree\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Customized dialogs\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }\n  }, \"Here is an example of customizing the component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleClickOpen5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 15\n    }\n  }, \"Open dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose5,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle5, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 17\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(DialogContent5, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 19\n    }\n  }, \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 19\n    }\n  }, \"Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.\"), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 19\n    }\n  }, \"Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\")), /*#__PURE__*/React.createElement(DialogActions5, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose5,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 19\n    }\n  }, \"Save changes\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode7,\n    beforeCodeTitle: \"Optional sizes\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 13\n    }\n  }, \"You can set a dialog maximum width by using the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 15\n    }\n  }, \"maxWidth\"), \" enumerable in combination with the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 15\n    }\n  }, \"fullWidth\"), \" boolean. When the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 56\n    }\n  }, \"fullWidth\"), \" \", \"property is true, the dialog will adapt based on the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 15\n    }\n  }, \"maxWidth\"), \" value.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 15\n    }\n  }, \"Open max-width dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: fullWidth7,\n    maxWidth: maxWidth7,\n    open: open7,\n    onClose: handleClose7,\n    \"aria-labelledby\": \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 17\n    }\n  }, \"Optional sizes\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 19\n    }\n  }, \"You can set my maximum width and whether to adapt or not.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes7.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes7.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"max-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 23\n    }\n  }, \"maxWidth\"), /*#__PURE__*/React.createElement(Select, {\n    value: maxWidth7,\n    onChange: handleMaxWidthChange7,\n    inputProps: {\n      name: \"max-width\",\n      id: \"max-width\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 25\n    }\n  }, \"false\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 25\n    }\n  }, \"xs\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 25\n    }\n  }, \"sm\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 25\n    }\n  }, \"md\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 25\n    }\n  }, \"lg\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 25\n    }\n  }, \"xl\"))), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes7.formControlLabel,\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: fullWidth7,\n      onChange: handleFullWidthChange7,\n      value: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 25\n      }\n    }),\n    label: \"Full width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose7,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 19\n    }\n  }, \"Close\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode9,\n    beforeCodeTitle: \"Confirmation dialogs\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 13\n    }\n  }, \"Confirmation dialogs require users to explicitly confirm their choice before an option is committed. For example, users can listen to multiple ringtones but only make a final selection upon touching \\u201COK\\u201D.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes9.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Interruptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"ringtone-menu\",\n    \"aria-label\": \"Phone ringtone\",\n    onClick: handleClickListItem9,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Phone ringtone\",\n    secondary: value9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Default notification ringtone\",\n    secondary: \"Tethys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationDialogRaw9, {\n    classes: {\n      paper: classes9.paper\n    },\n    id: \"ringtone-menu\",\n    keepMounted: true,\n    open: open9,\n    onClose: handleClose9,\n    value: value9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Alerts\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 13\n    }\n  }, \"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 15\n    }\n  }, \"Open alert dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open2,\n    onClose: handleClose2,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 17\n    }\n  }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 19\n    }\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose2,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 19\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose2,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 19\n    }\n  }, \"Agree\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Form dialogs\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 13\n    }\n  }, \"Form dialogs allow users to fill out form fields within a dialog. For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and touch 'Submit'.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 15\n    }\n  }, \"Open form dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open4,\n    onClose: handleClose4,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 17\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 19\n    }\n  }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose4,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose4,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 19\n    }\n  }, \"Subscribe\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode6,\n    beforeCodeTitle: \"Full-screen dialogs\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 15\n    }\n  }, \"Open full-screen dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: true,\n    open: open6,\n    onClose: handleClose6,\n    TransitionComponent: Transition6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes6.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose6,\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes6.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 21\n    }\n  }, \"Sound\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    onClick: handleClose6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 21\n    }\n  }, \"save\"))), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Phone ringtone\",\n    secondary: \"Titania\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Default notification ringtone\",\n    secondary: \"Tethys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode8,\n    beforeCodeTitle: \"Responsive full-screen\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 13\n    }\n  }, \"You may make a dialog responsively full screen using\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 15\n    }\n  }, \"useMediaQuery\"), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 15\n    }\n  }, \"Open responsive dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen8,\n    open: open8,\n    onClose: handleClose8,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 17\n    }\n  }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 19\n    }\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose8,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 19\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose8,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 19\n    }\n  }, \"Agree\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode10,\n    beforeCodeTitle: \"Scrolling long content\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 13\n    }\n  }, \"When dialogs become too long for the user\\u2019s viewport or device, they scroll.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickOpen10(\"paper\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 15\n    }\n  }, \"scroll=paper\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickOpen10(\"body\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 15\n    }\n  }, \"scroll=body\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open10,\n    onClose: handleClose10,\n    scroll: scroll10,\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 17\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: scroll10 === \"paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 19\n    }\n  }, _toConsumableArray(new Array(50)).map(function () {\n    return \"Cras mattis consectetur purus sit amet fermentum.\\n              Cras justo odio, dapibus ac facilisis in, egestas eget quam.\\n              Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\";\n  }).join(\"\\n\"))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose10,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose10,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 19\n    }\n  }, \"Subscribe\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode11,\n    beforeCodeTitle: \"Draggable dialog\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 15\n    }\n  }, \"Open form dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open11,\n    onClose: handleClose11,\n    PaperComponent: PaperComponent11,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: \"move\"\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 17\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 19\n    }\n  }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose11,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 19\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose11,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 19\n    }\n  }, \"Subscribe\"))))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport PersonIcon from '@material-ui/icons/Person';\\nimport AddIcon from '@material-ui/icons/Add';\\nimport Typography from '@material-ui/core/Typography';\\nimport { blue } from '@material-ui/core/colors';\\n\\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\\nconst useStyles = makeStyles({\\n  avatar: {\\n    backgroundColor: blue[100],\\n    color: blue[600],\\n  },\\n});\\n\\nfunction SimpleDialog(props) {\\n  const classes = useStyles();\\n  const { onClose, selectedValue, ...other } = props;\\n\\n  function handleClose() {\\n    onClose(selectedValue);\\n  }\\n\\n  function handleListItemClick(value) {\\n    onClose(value);\\n  }\\n\\n  return (\\n    <Dialog onClose={handleClose} aria-labelledby=\\\"simple-dialog-title\\\" {...other}>\\n      <DialogTitle id=\\\"simple-dialog-title\\\">Set backup account</DialogTitle>\\n      <List>\\n        {emails.map(email => (\\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\\n            <ListItemAvatar>\\n              <Avatar className={classes.avatar}>\\n                <PersonIcon />\\n              </Avatar>\\n            </ListItemAvatar>\\n            <ListItemText primary={email} />\\n          </ListItem>\\n        ))}\\n\\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\\n          <ListItemAvatar>\\n            <Avatar>\\n              <AddIcon />\\n            </Avatar>\\n          </ListItemAvatar>\\n          <ListItemText primary=\\\"add account\\\" />\\n        </ListItem>\\n      </List>\\n    </Dialog>\\n  );\\n}\\n\\nSimpleDialog.propTypes = {\\n  onClose: PropTypes.func,\\n  open: PropTypes.bool,\\n  selectedValue: PropTypes.string,\\n};\\n\\nexport default function SimpleDialogDemo() {\\n  const [open, setOpen] = React.useState(false);\\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\\n\\n  function handleClickOpen() {\\n    setOpen(true);\\n  }\\n\\n  const handleClose = value => {\\n    setOpen(false);\\n    setSelectedValue(value);\\n  };\\n\\n  return (\\n    <div>\\n      <Typography variant=\\\"subtitle1\\\">Selected: {selectedValue}</Typography>\\n      <br />\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Open simple dialog\\n      </Button>\\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\n\\nexport default function AlertDialog() {\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClickOpen() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Open alert dialog\\n      </Button>\\n      <Dialog\\n        open={open}\\n        onClose={handleClose}\\n        aria-labelledby=\\\"alert-dialog-title\\\"\\n        aria-describedby=\\\"alert-dialog-description\\\"\\n      >\\n        <DialogTitle id=\\\"alert-dialog-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\n        <DialogContent>\\n          <DialogContentText id=\\\"alert-dialog-description\\\">\\n            Let Google help apps determine location. This means sending anonymous location data to\\n            Google, even when no apps are running.\\n          </DialogContentText>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Disagree\\n          </Button>\\n          <Button onClick={handleClose} color=\\\"primary\\\" autoFocus>\\n            Agree\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport Slide from '@material-ui/core/Slide';\\n\\nconst Transition = React.forwardRef(function Transition(props, ref) {\\n  return <Slide direction=\\\"up\\\" ref={ref} {...props} />;\\n});\\n\\nexport default function AlertDialogSlide() {\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClickOpen() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Slide in alert dialog\\n      </Button>\\n      <Dialog\\n        open={open}\\n        TransitionComponent={Transition}\\n        keepMounted\\n        onClose={handleClose}\\n        aria-labelledby=\\\"alert-dialog-slide-title\\\"\\n        aria-describedby=\\\"alert-dialog-slide-description\\\"\\n      >\\n        <DialogTitle id=\\\"alert-dialog-slide-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\n        <DialogContent>\\n          <DialogContentText id=\\\"alert-dialog-slide-description\\\">\\n            Let Google help apps determine location. This means sending anonymous location data to\\n            Google, even when no apps are running.\\n          </DialogContentText>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Disagree\\n          </Button>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Agree\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport TextField from '@material-ui/core/TextField';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\n\\nexport default function FormDialog() {\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClickOpen() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Open form dialog\\n      </Button>\\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\\\"form-dialog-title\\\">\\n        <DialogTitle id=\\\"form-dialog-title\\\">Subscribe</DialogTitle>\\n        <DialogContent>\\n          <DialogContentText>\\n            To subscribe to this website, please enter your email address here. We will send updates\\n            occasionally.\\n          </DialogContentText>\\n          <TextField\\n            autoFocus\\n            margin=\\\"dense\\\"\\n            id=\\\"name\\\"\\n            label=\\\"Email Address\\\"\\n            type=\\\"email\\\"\\n            fullWidth\\n          />\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Cancel\\n          </Button>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Subscribe\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\\nimport MuiDialogContent from '@material-ui/core/DialogContent';\\nimport MuiDialogActions from '@material-ui/core/DialogActions';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n  root: {\\n    margin: 0,\\n    padding: theme.spacing(2),\\n  },\\n  closeButton: {\\n    position: 'absolute',\\n    right: theme.spacing(1),\\n    top: theme.spacing(1),\\n    color: theme.palette.grey[500],\\n  },\\n});\\n\\nconst DialogTitle = withStyles(styles)(props => {\\n  const { children, classes, onClose } = props;\\n  return (\\n    <MuiDialogTitle disableTypography className={classes.root}>\\n      <Typography variant=\\\"h6\\\">{children}</Typography>\\n      {onClose ? (\\n        <IconButton aria-label=\\\"Close\\\" className={classes.closeButton} onClick={onClose}>\\n          <CloseIcon />\\n        </IconButton>\\n      ) : null}\\n    </MuiDialogTitle>\\n  );\\n});\\n\\nconst DialogContent = withStyles(theme => ({\\n  root: {\\n    padding: theme.spacing(2),\\n  },\\n}))(MuiDialogContent);\\n\\nconst DialogActions = withStyles(theme => ({\\n  root: {\\n    margin: 0,\\n    padding: theme.spacing(1),\\n  },\\n}))(MuiDialogActions);\\n\\nclass CustomizedDialogs extends React.Component {\\n  state = {\\n    open: false,\\n  };\\n\\n  handleClickOpen = () => {\\n    this.setState({\\n      open: true,\\n    });\\n  };\\n\\n  handleClose = () => {\\n    this.setState({ open: false });\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button variant=\\\"outlined\\\" color=\\\"secondary\\\" onClick={this.handleClickOpen}>\\n          Open dialog\\n        </Button>\\n        <Dialog\\n          onClose={this.handleClose}\\n          aria-labelledby=\\\"customized-dialog-title\\\"\\n          open={this.state.open}\\n        >\\n          <DialogTitle id=\\\"customized-dialog-title\\\" onClose={this.handleClose}>\\n            Modal title\\n          </DialogTitle>\\n          <DialogContent dividers>\\n            <Typography gutterBottom>\\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n              at eros.\\n            </Typography>\\n            <Typography gutterBottom>\\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\\n            </Typography>\\n            <Typography gutterBottom>\\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\\n              auctor fringilla.\\n            </Typography>\\n          </DialogContent>\\n          <DialogActions>\\n            <Button onClick={this.handleClose} color=\\\"primary\\\">\\n              Save changes\\n            </Button>\\n          </DialogActions>\\n        </Dialog>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default CustomizedDialogs;\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport List from '@material-ui/core/List';\\nimport Divider from '@material-ui/core/Divider';\\nimport AppBar from '@material-ui/core/AppBar';\\nimport Toolbar from '@material-ui/core/Toolbar';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Typography from '@material-ui/core/Typography';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport Slide from '@material-ui/core/Slide';\\n\\nconst useStyles = makeStyles(theme => ({\\n  appBar: {\\n    position: 'relative',\\n  },\\n  title: {\\n    marginLeft: theme.spacing(2),\\n    flex: 1,\\n  },\\n}));\\n\\nconst Transition = React.forwardRef(function Transition(props, ref) {\\n  return <Slide direction=\\\"up\\\" ref={ref} {...props} />;\\n});\\n\\nexport default function FullScreenDialog() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClickOpen() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Open full-screen dialog\\n      </Button>\\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\\n        <AppBar className={classes.appBar}>\\n          <Toolbar>\\n            <IconButton edge=\\\"start\\\" color=\\\"inherit\\\" onClick={handleClose} aria-label=\\\"Close\\\">\\n              <CloseIcon />\\n            </IconButton>\\n            <Typography variant=\\\"h6\\\" className={classes.title}>\\n              Sound\\n            </Typography>\\n            <Button color=\\\"inherit\\\" onClick={handleClose}>\\n              save\\n            </Button>\\n          </Toolbar>\\n        </AppBar>\\n        <List>\\n          <ListItem button>\\n            <ListItemText primary=\\\"Phone ringtone\\\" secondary=\\\"Titania\\\" />\\n          </ListItem>\\n          <Divider />\\n          <ListItem button>\\n            <ListItemText primary=\\\"Default notification ringtone\\\" secondary=\\\"Tethys\\\" />\\n          </ListItem>\\n        </List>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode7 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Select from '@material-ui/core/Select';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst useStyles = makeStyles(theme => ({\\n  form: {\\n    display: 'flex',\\n    flexDirection: 'column',\\n    margin: 'auto',\\n    width: 'fit-content',\\n  },\\n  formControl: {\\n    marginTop: theme.spacing(2),\\n    minWidth: 120,\\n  },\\n  formControlLabel: {\\n    marginTop: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function MaxWidthDialog() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n  const [fullWidth, setFullWidth] = React.useState(true);\\n  const [maxWidth, setMaxWidth] = React.useState('sm');\\n\\n  function handleClickOpen() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  function handleMaxWidthChange(event) {\\n    setMaxWidth(event.target.value);\\n  }\\n\\n  function handleFullWidthChange(event) {\\n    setFullWidth(event.target.checked);\\n  }\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Open max-width dialog\\n      </Button>\\n      <Dialog\\n        fullWidth={fullWidth}\\n        maxWidth={maxWidth}\\n        open={open}\\n        onClose={handleClose}\\n        aria-labelledby=\\\"max-width-dialog-title\\\"\\n      >\\n        <DialogTitle id=\\\"max-width-dialog-title\\\">Optional sizes</DialogTitle>\\n        <DialogContent>\\n          <DialogContentText>\\n            You can set my maximum width and whether to adapt or not.\\n          </DialogContentText>\\n          <form className={classes.form} noValidate>\\n            <FormControl className={classes.formControl}>\\n              <InputLabel htmlFor=\\\"max-width\\\">maxWidth</InputLabel>\\n              <Select\\n                value={maxWidth}\\n                onChange={handleMaxWidthChange}\\n                inputProps={{\\n                  name: 'max-width',\\n                  id: 'max-width',\\n                }}\\n              >\\n                <MenuItem value={false}>false</MenuItem>\\n                <MenuItem value=\\\"xs\\\">xs</MenuItem>\\n                <MenuItem value=\\\"sm\\\">sm</MenuItem>\\n                <MenuItem value=\\\"md\\\">md</MenuItem>\\n                <MenuItem value=\\\"lg\\\">lg</MenuItem>\\n                <MenuItem value=\\\"xl\\\">xl</MenuItem>\\n              </Select>\\n            </FormControl>\\n            <FormControlLabel\\n              className={classes.formControlLabel}\\n              control={\\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\\\"fullWidth\\\" />\\n              }\\n              label=\\\"Full width\\\"\\n            />\\n          </form>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Close\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </React.Fragment>\\n  );\\n}\\n\";\nvar jsCode8 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\\nimport { useTheme } from '@material-ui/core/styles';\\n\\nexport default function ResponsiveDialog() {\\n  const [open, setOpen] = React.useState(false);\\n  const theme = useTheme();\\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\\n\\n  function handleClickOpen() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Open responsive dialog\\n      </Button>\\n      <Dialog\\n        fullScreen={fullScreen}\\n        open={open}\\n        onClose={handleClose}\\n        aria-labelledby=\\\"responsive-dialog-title\\\"\\n      >\\n        <DialogTitle id=\\\"responsive-dialog-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\n        <DialogContent>\\n          <DialogContentText>\\n            Let Google help apps determine location. This means sending anonymous location data to\\n            Google, even when no apps are running.\\n          </DialogContentText>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Disagree\\n          </Button>\\n          <Button onClick={handleClose} color=\\\"primary\\\" autoFocus>\\n            Agree\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode9 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport Radio from '@material-ui/core/Radio';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\n\\nconst options = [\\n  'None',\\n  'Atria',\\n  'Callisto',\\n  'Dione',\\n  'Ganymede',\\n  'Hangouts Call',\\n  'Luna',\\n  'Oberon',\\n  'Phobos',\\n  'Pyxis',\\n  'Sedna',\\n  'Titania',\\n  'Triton',\\n  'Umbriel',\\n];\\n\\nfunction ConfirmationDialogRaw(props) {\\n  const { onClose, value: valueProp, open, ...other } = props;\\n  const [value, setValue] = React.useState(valueProp);\\n  const radioGroupRef = React.useRef(null);\\n\\n  React.useEffect(() => {\\n    if (!open) {\\n      setValue(valueProp);\\n    }\\n  }, [valueProp, open]);\\n\\n  function handleEntering() {\\n    if (radioGroupRef.current != null) {\\n      radioGroupRef.current.focus();\\n    }\\n  }\\n\\n  function handleCancel() {\\n    onClose();\\n  }\\n\\n  function handleOk() {\\n    onClose(value);\\n  }\\n\\n  function handleChange(event, newValue) {\\n    setValue(newValue);\\n  }\\n\\n  return (\\n    <Dialog\\n      disableBackdropClick\\n      disableEscapeKeyDown\\n      maxWidth=\\\"xs\\\"\\n      onEntering={handleEntering}\\n      aria-labelledby=\\\"confirmation-dialog-title\\\"\\n      open={open}\\n      {...other}\\n    >\\n      <DialogTitle id=\\\"confirmation-dialog-title\\\">Phone Ringtone</DialogTitle>\\n      <DialogContent dividers>\\n        <RadioGroup\\n          ref={radioGroupRef}\\n          aria-label=\\\"Ringtone\\\"\\n          name=\\\"ringtone\\\"\\n          value={value}\\n          onChange={handleChange}\\n        >\\n          {options.map(option => (\\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\\n          ))}\\n        </RadioGroup>\\n      </DialogContent>\\n      <DialogActions>\\n        <Button onClick={handleCancel} color=\\\"primary\\\">\\n          Cancel\\n        </Button>\\n        <Button onClick={handleOk} color=\\\"primary\\\">\\n          Ok\\n        </Button>\\n      </DialogActions>\\n    </Dialog>\\n  );\\n}\\n\\nConfirmationDialogRaw.propTypes = {\\n  onClose: PropTypes.func.isRequired,\\n  open: PropTypes.bool.isRequired,\\n  value: PropTypes.string.isRequired,\\n};\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    maxWidth: 360,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n  paper: {\\n    width: '80%',\\n    maxHeight: 435,\\n  },\\n}));\\n\\nexport default function ConfirmationDialog() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n  const [value, setValue] = React.useState('Dione');\\n\\n  function handleClickListItem() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose(newValue) {\\n    setOpen(false);\\n\\n    if (newValue) {\\n      setValue(newValue);\\n    }\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <List component=\\\"div\\\" role=\\\"list\\\">\\n        <ListItem button divider disabled role=\\\"listitem\\\">\\n          <ListItemText primary=\\\"Interruptions\\\" />\\n        </ListItem>\\n        <ListItem\\n          button\\n          divider\\n          aria-haspopup=\\\"true\\\"\\n          aria-controls=\\\"ringtone-menu\\\"\\n          aria-label=\\\"Phone ringtone\\\"\\n          onClick={handleClickListItem}\\n          role=\\\"listitem\\\"\\n        >\\n          <ListItemText primary=\\\"Phone ringtone\\\" secondary={value} />\\n        </ListItem>\\n        <ListItem button divider disabled role=\\\"listitem\\\">\\n          <ListItemText primary=\\\"Default notification ringtone\\\" secondary=\\\"Tethys\\\" />\\n        </ListItem>\\n        <ConfirmationDialogRaw\\n          classes={{\\n            paper: classes.paper,\\n          }}\\n          id=\\\"ringtone-menu\\\"\\n          keepMounted\\n          open={open}\\n          onClose={handleClose}\\n          value={value}\\n        />\\n      </List>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode10 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\n\\nexport default function ScrollDialog() {\\n  const [open, setOpen] = React.useState(false);\\n  const [scroll, setScroll] = React.useState('paper');\\n\\n  const handleClickOpen = scrollType => () => {\\n    setOpen(true);\\n    setScroll(scrollType);\\n  };\\n\\n  function handleClose() {\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\\n      <Button onClick={handleClickOpen('body')}>scroll=body</Button>\\n      <Dialog\\n        open={open}\\n        onClose={handleClose}\\n        scroll={scroll}\\n        aria-labelledby=\\\"scroll-dialog-title\\\"\\n      >\\n        <DialogTitle id=\\\"scroll-dialog-title\\\">Subscribe</DialogTitle>\\n        <DialogContent dividers={scroll === 'paper'}>\\n          <DialogContentText>\\n            {[...new Array(50)]\\n              .map(\\n                () => `Cras mattis consectetur purus sit amet fermentum.\\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\\n              )\\n              .join('\\n')}\\n          </DialogContentText>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Cancel\\n          </Button>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Subscribe\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode11 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport Paper from '@material-ui/core/Paper';\\nimport Draggable from 'react-draggable';\\n\\nfunction PaperComponent(props) {\\n  return (\\n    <Draggable cancel={'[class*=\\\"MuiDialogContent-root\\\"]'}>\\n      <Paper {...props} />\\n    </Draggable>\\n  );\\n}\\n\\nexport default function DraggableDialog() {\\n  const [open, setOpen] = React.useState(false);\\n\\n  const handleClickOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" color=\\\"primary\\\" onClick={handleClickOpen}>\\n        Open form dialog\\n      </Button>\\n      <Dialog\\n        open={open}\\n        onClose={handleClose}\\n        PaperComponent={PaperComponent}\\n        aria-labelledby=\\\"draggable-dialog-title\\\"\\n      >\\n        <DialogTitle style={{ cursor: 'move' }} id=\\\"draggable-dialog-title\\\">\\n          Subscribe\\n        </DialogTitle>\\n        <DialogContent>\\n          <DialogContentText>\\n            To subscribe to this website, please enter your email address here. We will send updates\\n            occasionally.\\n          </DialogContentText>\\n        </DialogContent>\\n        <DialogActions>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Cancel\\n          </Button>\\n          <Button onClick={handleClose} color=\\\"primary\\\">\\n            Subscribe\\n          </Button>\\n        </DialogActions>\\n      </Dialog>\\n    </div>\\n  );\\n}\\n\";","map":{"version":3,"names":["React","PropTypes","Draggable","makeStyles","withStyles","useTheme","Dialog","DialogTitle","List","ListItem","ListItemAvatar","Avatar","ListItemText","Typography","Button","DialogActions","DialogContent","DialogContentText","Slide","TextField","IconButton","AppBar","Toolbar","Divider","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Switch","useMediaQuery","RadioGroup","Radio","Paper","blue","PersonIcon","AddIcon","CloseIcon","Notice","KTCodeExample","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","_this","classes","onClose","selectedValue","other","_objectWithoutProperties","_excluded","handleClose","handleListItemClick","value","createElement","Object","assign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","map","email","button","onClick","key","className","primary","propTypes","func","open","bool","string","Transition3","forwardRef","Transition5","ref","direction","styles5","theme","root","margin","padding","spacing","closeButton","position","right","top","palette","grey","DialogTitle5","children","disableTypography","_this2","variant","DialogContent5","DialogActions5","useStyles6","appBar","title","marginLeft","flex","Transition6","Transition","useStyles7","form","display","flexDirection","width","formControl","marginTop","minWidth","formControlLabel","options9","ConfirmationDialogRaw9","_this3","valueProp","_excluded2","_React$useState","useState","_React$useState2","_slicedToArray","setValue","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","newValue","disableBackdropClick","disableEscapeKeyDown","maxWidth","onEntering","dividers","name","onChange","option","control","label","isRequired","useStyles9","background","paper","maxHeight","PaperComponent11","cancel","DialogsExamplesPage","_React$useState3","_React$useState4","setOpen","_React$useState5","_React$useState6","setSelectedValue","handleClickOpen","_React$useState7","_React$useState8","open2","setOpen2","handleClickOpen2","handleClose2","_React$useState9","_React$useState10","open3","setOpen3","handleClickOpen3","handleClose3","_React$useState11","_React$useState12","open4","setOpen4","handleClickOpen4","handleClose4","_React$useState13","_React$useState14","open5","setOpen5","handleClickOpen5","handleClose5","classes6","_React$useState15","_React$useState16","open6","setOpen6","handleClickOpen6","handleClose6","classes7","_React$useState17","_React$useState18","open7","setOpen7","_React$useState19","_React$useState20","fullWidth7","setFullWidth7","_React$useState21","_React$useState22","maxWidth7","setMaxWidth7","handleClickOpen7","handleClose7","handleMaxWidthChange7","target","handleFullWidthChange7","checked","_React$useState23","_React$useState24","open8","setOpen8","theme8","fullScreen8","breakpoints","down","handleClickOpen8","handleClose8","classes9","_React$useState25","_React$useState26","open9","setOpen9","_React$useState27","_React$useState28","value9","setValue9","handleClickListItem9","handleClose9","_React$useState29","_React$useState30","open10","setOpen10","_React$useState31","_React$useState32","scroll10","setScroll10","handleClickOpen10","scrollType","handleClose10","_React$useState33","_React$useState34","open11","setOpen11","handleClickOpen11","handleClose11","Fragment","icon","rel","href","jsCode","jsCode1","beforeCodeTitle","codeBlockHeight","jsCode3","TransitionComponent","keepMounted","jsCode5","gutterBottom","jsCode7","fullWidth","noValidate","htmlFor","inputProps","jsCode9","component","role","divider","disabled","secondary","jsCode2","autoFocus","jsCode4","type","jsCode6","fullScreen","edge","jsCode8","jsCode10","scroll","_toConsumableArray","Array","join","jsCode11","PaperComponent","style","cursor"],"sources":["C:/Users/Emamyari/Desktop/metapp/demo2/src/app/modules/GoogleMaterialExamples/feedback/DialogsExamplesPage.js"],"sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Draggable from \"react-draggable\";\r\nimport {makeStyles, withStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n  TextField,\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Switch,\r\n  useMediaQuery,\r\n  RadioGroup,\r\n  Radio,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600]\r\n  }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map(email => (\r\n          <ListItem\r\n            button\r\n            onClick={() => handleListItemClick(email)}\r\n            key={email}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick(\"addAccount\")}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selectedValue: PropTypes.string\r\n};\r\n\r\n// Example 3\r\nconst Transition3 = React.forwardRef(function Transition5(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n// Example 5\r\nconst styles5 = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle5 = withStyles(styles5)(props => {\r\n  const { children, classes, onClose } = props;\r\n  return (\r\n    <DialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent5 = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(DialogContent);\r\n\r\nconst DialogActions5 = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(DialogActions);\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nconst Transition6 = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles(theme => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    width: \"fit-content\"\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 9\r\nconst options9 = [\r\n  \"None\",\r\n  \"Atria\",\r\n  \"Callisto\",\r\n  \"Dione\",\r\n  \"Ganymede\",\r\n  \"Hangouts Call\",\r\n  \"Luna\",\r\n  \"Oberon\",\r\n  \"Phobos\",\r\n  \"Pyxis\",\r\n  \"Sedna\",\r\n  \"Titania\",\r\n  \"Triton\",\r\n  \"Umbriel\"\r\n];\r\n\r\nfunction ConfirmationDialogRaw9(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function handleCancel() {\r\n    onClose();\r\n  }\r\n\r\n  function handleOk() {\r\n    onClose(value);\r\n  }\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options9.map(option => (\r\n            <FormControlLabel\r\n              value={option}\r\n              key={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw9.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  paper: {\r\n    width: \"80%\",\r\n    maxHeight: 435\r\n  }\r\n}));\r\n\r\n// Example 11\r\nfunction PaperComponent11(props) {\r\n  return (\r\n    <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function DialogsExamplesPage() {\r\n  // Example 1\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  // Example 2\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  function handleClickOpen2() {\r\n    setOpen2(true);\r\n  }\r\n\r\n  function handleClose2() {\r\n    setOpen2(false);\r\n  }\r\n\r\n  // Example 3\r\n  const [open3, setOpen3] = React.useState(false);\r\n\r\n  function handleClickOpen3() {\r\n    setOpen3(true);\r\n  }\r\n\r\n  function handleClose3() {\r\n    setOpen3(false);\r\n  }\r\n\r\n  // Example 4\r\n  const [open4, setOpen4] = React.useState(false);\r\n\r\n  function handleClickOpen4() {\r\n    setOpen4(true);\r\n  }\r\n\r\n  function handleClose4() {\r\n    setOpen4(false);\r\n  }\r\n\r\n  // Example 5\r\n  const [open5, setOpen5] = React.useState(false);\r\n\r\n  function handleClickOpen5() {\r\n    setOpen5(true);\r\n  }\r\n\r\n  function handleClose5() {\r\n    setOpen5(false);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [open6, setOpen6] = React.useState(false);\r\n\r\n  function handleClickOpen6() {\r\n    setOpen6(true);\r\n  }\r\n\r\n  function handleClose6() {\r\n    setOpen6(false);\r\n  }\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [open7, setOpen7] = React.useState(false);\r\n  const [fullWidth7, setFullWidth7] = React.useState(true);\r\n  const [maxWidth7, setMaxWidth7] = React.useState(\"sm\");\r\n\r\n  function handleClickOpen7() {\r\n    setOpen7(true);\r\n  }\r\n\r\n  function handleClose7() {\r\n    setOpen7(false);\r\n  }\r\n\r\n  function handleMaxWidthChange7(event) {\r\n    setMaxWidth7(event.target.value);\r\n  }\r\n\r\n  function handleFullWidthChange7(event) {\r\n    setFullWidth7(event.target.checked);\r\n  }\r\n\r\n  // Example 8\r\n  const [open8, setOpen8] = React.useState(false);\r\n  const theme8 = useTheme();\r\n  const fullScreen8 = useMediaQuery(theme8.breakpoints.down(\"sm\"));\r\n\r\n  function handleClickOpen8() {\r\n    setOpen8(true);\r\n  }\r\n\r\n  function handleClose8() {\r\n    setOpen8(false);\r\n  }\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const [open9, setOpen9] = React.useState(false);\r\n  const [value9, setValue9] = React.useState(\"Dione\");\r\n\r\n  function handleClickListItem9() {\r\n    setOpen9(true);\r\n  }\r\n\r\n  function handleClose9(newValue) {\r\n    setOpen9(false);\r\n\r\n    if (newValue) {\r\n      setValue9(newValue);\r\n    }\r\n  }\r\n\r\n  // Example 10\r\n  const [open10, setOpen10] = React.useState(false);\r\n  const [scroll10, setScroll10] = React.useState(\"paper\");\r\n\r\n  const handleClickOpen10 = scrollType => () => {\r\n    setOpen10(true);\r\n    setScroll10(scrollType);\r\n  };\r\n\r\n  function handleClose10() {\r\n    setOpen10(false);\r\n  }\r\n\r\n  // Example 11\r\n  const [open11, setOpen11] = React.useState(false);\r\n\r\n  const handleClickOpen11 = () => {\r\n    setOpen11(true);\r\n  };\r\n\r\n  const handleClose11 = () => {\r\n    setOpen11(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Dialogs inform users about a task and can contain critical\r\n          information, require decisions, or involve multiple tasks\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/dialogs/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Simple dialogs can provide additional details or actions about a\r\n              list item. For example, they can display avatars, icons,\r\n              clarifying subtext, or orthogonal actions (such as adding an\r\n              account).\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Typography variant=\"subtitle1\">\r\n                Selected: {selectedValue}\r\n              </Typography>\r\n              <br />\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n              >\r\n                Open simple dialog\r\n              </Button>\r\n              <SimpleDialog\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Transitions\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You can also swap out the transition, the next example uses{\" \"}\r\n              <code>Slide</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen3}\r\n              >\r\n                Slide in alert dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open3}\r\n                TransitionComponent={Transition3}\r\n                keepMounted\r\n                onClose={handleClose3}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Let Google help apps determine location. This means sending\r\n                    anonymous location data to Google, even when no apps are\r\n                    running.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose3} color=\"primary\">\r\n                    Disagree\r\n                  </Button>\r\n                  <Button onClick={handleClose3} color=\"primary\">\r\n                    Agree\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Customized dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleClickOpen5}\r\n              >\r\n                Open dialog\r\n              </Button>\r\n              <Dialog\r\n                onClose={handleClose5}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open5}\r\n              >\r\n                <DialogTitle5\r\n                  id=\"customized-dialog-title\"\r\n                  onClose={handleClose5}\r\n                >\r\n                  Modal title\r\n                </DialogTitle5>\r\n                <DialogContent5 dividers>\r\n                  <Typography gutterBottom>\r\n                    Cras mattis consectetur purus sit amet fermentum. Cras justo\r\n                    odio, dapibus ac facilisis in, egestas eget quam. Morbi leo\r\n                    risus, porta ac consectetur ac, vestibulum at eros.\r\n                  </Typography>\r\n                  <Typography gutterBottom>\r\n                    Praesent commodo cursus magna, vel scelerisque nisl\r\n                    consectetur et. Vivamus sagittis lacus vel augue laoreet\r\n                    rutrum faucibus dolor auctor.\r\n                  </Typography>\r\n                  <Typography gutterBottom>\r\n                    Aenean lacinia bibendum nulla sed consectetur. Praesent\r\n                    commodo cursus magna, vel scelerisque nisl consectetur et.\r\n                    Donec sed odio dui. Donec ullamcorper nulla non metus auctor\r\n                    fringilla.\r\n                  </Typography>\r\n                </DialogContent5>\r\n                <DialogActions5>\r\n                  <Button onClick={handleClose5} color=\"primary\">\r\n                    Save changes\r\n                  </Button>\r\n                </DialogActions5>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Optional sizes\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You can set a dialog maximum width by using the{\" \"}\r\n              <code>maxWidth</code> enumerable in combination with the{\" \"}\r\n              <code>fullWidth</code> boolean. When the <code>fullWidth</code>{\" \"}\r\n              property is true, the dialog will adapt based on the{\" \"}\r\n              <code>maxWidth</code> value.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <React.Fragment>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen7}\r\n              >\r\n                Open max-width dialog\r\n              </Button>\r\n              <Dialog\r\n                fullWidth={fullWidth7}\r\n                maxWidth={maxWidth7}\r\n                open={open7}\r\n                onClose={handleClose7}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"max-width-dialog-title\">\r\n                  Optional sizes\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    You can set my maximum width and whether to adapt or not.\r\n                  </DialogContentText>\r\n                  <form className={classes7.form} noValidate>\r\n                    <FormControl className={classes7.formControl}>\r\n                      <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                      <Select\r\n                        value={maxWidth7}\r\n                        onChange={handleMaxWidthChange7}\r\n                        inputProps={{\r\n                          name: \"max-width\",\r\n                          id: \"max-width\"\r\n                        }}\r\n                      >\r\n                        <MenuItem value={false}>false</MenuItem>\r\n                        <MenuItem value=\"xs\">xs</MenuItem>\r\n                        <MenuItem value=\"sm\">sm</MenuItem>\r\n                        <MenuItem value=\"md\">md</MenuItem>\r\n                        <MenuItem value=\"lg\">lg</MenuItem>\r\n                        <MenuItem value=\"xl\">xl</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormControlLabel\r\n                      className={classes7.formControlLabel}\r\n                      control={\r\n                        <Switch\r\n                          checked={fullWidth7}\r\n                          onChange={handleFullWidthChange7}\r\n                          value=\"fullWidth\"\r\n                        />\r\n                      }\r\n                      label=\"Full width\"\r\n                    />\r\n                  </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose7} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </React.Fragment>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Confirmation dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Confirmation dialogs require users to explicitly confirm their\r\n              choice before an option is committed. For example, users can\r\n              listen to multiple ringtones but only make a final selection upon\r\n              touching “OK”.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                  <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  divider\r\n                  aria-haspopup=\"true\"\r\n                  aria-controls=\"ringtone-menu\"\r\n                  aria-label=\"Phone ringtone\"\r\n                  onClick={handleClickListItem9}\r\n                  role=\"listitem\"\r\n                >\r\n                  <ListItemText primary=\"Phone ringtone\" secondary={value9} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                  <ListItemText\r\n                    primary=\"Default notification ringtone\"\r\n                    secondary=\"Tethys\"\r\n                  />\r\n                </ListItem>\r\n                <ConfirmationDialogRaw9\r\n                  classes={{\r\n                    paper: classes9.paper\r\n                  }}\r\n                  id=\"ringtone-menu\"\r\n                  keepMounted\r\n                  open={open9}\r\n                  onClose={handleClose9}\r\n                  value={value9}\r\n                />\r\n              </List>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Alerts\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Alerts are urgent interruptions, requiring acknowledgement, that\r\n              inform the user about a situation.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen2}\r\n              >\r\n                Open alert dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open2}\r\n                onClose={handleClose2}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                  {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    Let Google help apps determine location. This means sending\r\n                    anonymous location data to Google, even when no apps are\r\n                    running.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose2} color=\"primary\">\r\n                    Disagree\r\n                  </Button>\r\n                  <Button onClick={handleClose2} color=\"primary\" autoFocus>\r\n                    Agree\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Form dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Form dialogs allow users to fill out form fields within a dialog.\r\n              For example, if your site prompts for potential subscribers to\r\n              fill in their email address, they can fill out the email field and\r\n              touch 'Submit'.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen4}\r\n              >\r\n                Open form dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open4}\r\n                onClose={handleClose4}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    To subscribe to this website, please enter your email\r\n                    address here. We will send updates occasionally.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose4} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleClose4} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Full-screen dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen6}\r\n              >\r\n                Open full-screen dialog\r\n              </Button>\r\n              <Dialog\r\n                fullScreen\r\n                open={open6}\r\n                onClose={handleClose6}\r\n                TransitionComponent={Transition6}\r\n              >\r\n                <AppBar className={classes6.appBar}>\r\n                  <Toolbar>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      onClick={handleClose6}\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes6.title}>\r\n                      Sound\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClose6}>\r\n                      save\r\n                    </Button>\r\n                  </Toolbar>\r\n                </AppBar>\r\n                <List>\r\n                  <ListItem button>\r\n                    <ListItemText\r\n                      primary=\"Phone ringtone\"\r\n                      secondary=\"Titania\"\r\n                    />\r\n                  </ListItem>\r\n                  <Divider />\r\n                  <ListItem button>\r\n                    <ListItemText\r\n                      primary=\"Default notification ringtone\"\r\n                      secondary=\"Tethys\"\r\n                    />\r\n                  </ListItem>\r\n                </List>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Responsive full-screen\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You may make a dialog responsively full screen using{\" \"}\r\n              <code>useMediaQuery</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen8}\r\n              >\r\n                Open responsive dialog\r\n              </Button>\r\n              <Dialog\r\n                fullScreen={fullScreen8}\r\n                open={open8}\r\n                onClose={handleClose8}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"responsive-dialog-title\">\r\n                  {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    Let Google help apps determine location. This means sending\r\n                    anonymous location data to Google, even when no apps are\r\n                    running.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose8} color=\"primary\">\r\n                    Disagree\r\n                  </Button>\r\n                  <Button onClick={handleClose8} color=\"primary\" autoFocus>\r\n                    Agree\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Scrolling long content\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              When dialogs become too long for the user’s viewport or device,\r\n              they scroll.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClickOpen10(\"paper\")}>scroll=paper</Button>\r\n              <Button onClick={handleClickOpen10(\"body\")}>scroll=body</Button>\r\n              <Dialog\r\n                open={open10}\r\n                onClose={handleClose10}\r\n                scroll={scroll10}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent dividers={scroll10 === \"paper\"}>\r\n                  <DialogContentText>\r\n                    {[...new Array(50)]\r\n                      .map(\r\n                        () => `Cras mattis consectetur purus sit amet fermentum.\r\n              Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n              Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`\r\n                      )\r\n                      .join(\"\\n\")}\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose10} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleClose10} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Draggable dialog\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen11}\r\n              >\r\n                Open form dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open11}\r\n                onClose={handleClose11}\r\n                PaperComponent={PaperComponent11}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n              >\r\n                <DialogTitle\r\n                  style={{ cursor: \"move\" }}\r\n                  id=\"draggable-dialog-title\"\r\n                >\r\n                  Subscribe\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    To subscribe to this website, please enter your email\r\n                    address here. We will send updates occasionally.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose11} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleClose11} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map(email => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selectedValue: PropTypes.string,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nclass CustomizedDialogs extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleClickOpen}>\r\n          Open dialog\r\n        </Button>\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.open}\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            Modal title\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>\r\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\r\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\r\n              at eros.\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\r\n              auctor fringilla.\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Save changes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedDialogs;\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleMaxWidthChange(event) {\r\n    setMaxWidth(event.target.value);\r\n  }\r\n\r\n  function handleFullWidthChange(event) {\r\n    setFullWidth(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\r\n              }\r\n              label=\"Full width\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function handleCancel() {\r\n    onClose();\r\n  }\r\n\r\n  function handleOk() {\r\n    onClose(value);\r\n  }\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map(option => (\r\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    width: '80%',\r\n    maxHeight: 435,\r\n  },\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  function handleClickListItem() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(newValue) {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"div\" role=\"list\">\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\"\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper,\r\n          }}\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          value={value}\r\n        />\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ScrollDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState('paper');\r\n\r\n  const handleClickOpen = scrollType => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\r\n      <Button onClick={handleClickOpen('body')}>scroll=body</Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText>\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => \\`Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.\\`,\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function DraggableDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          Subscribe\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}