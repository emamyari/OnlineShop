{"ast":null,"code":"import * as requestFromServer from \"./specificationsCrud\";\nimport { specificationsSlice, callTypes } from \"./specificationsSlice\";\nvar actions = specificationsSlice.actions;\nexport var fetchSpecifications = function fetchSpecifications(queryParams, productId) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.list\n    }));\n    if (!productId) {\n      return dispatch(actions.specificationsFetched({\n        totalCount: 0,\n        entities: null\n      }));\n    }\n    return requestFromServer.findSpecifications(queryParams, productId).then(function (response) {\n      var _response$data = response.data,\n        totalCount = _response$data.totalCount,\n        entities = _response$data.entities;\n      dispatch(actions.specificationsFetched({\n        totalCount: totalCount,\n        entities: entities\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't find specifications\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.list\n      }));\n    });\n  };\n};\nexport var fetchSpecification = function fetchSpecification(id) {\n  return function (dispatch) {\n    if (!id) {\n      return dispatch(actions.specificationFetched({\n        specificationForEdit: undefined\n      }));\n    }\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.getSpecificationById(id).then(function (response) {\n      var specification = response.data;\n      dispatch(actions.specificationFetched({\n        specificationForEdit: specification\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't find specification\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var deleteSpecification = function deleteSpecification(id) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.deleteSpecification(id).then(function (response) {\n      dispatch(actions.specificationDeleted({\n        id: id\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't delete specification\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var createSpecification = function createSpecification(specificationForCreation) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.createSpecification(specificationForCreation).then(function (response) {\n      var specification = response.data.specification;\n      dispatch(actions.specificationCreated({\n        specification: specification\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't create specification\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var updateSpecification = function updateSpecification(specification) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.updateSpecification(specification).then(function () {\n      dispatch(actions.specificationUpdated({\n        specification: specification\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't update specification\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};\nexport var deleteSpecifications = function deleteSpecifications(ids) {\n  return function (dispatch) {\n    dispatch(actions.startCall({\n      callType: callTypes.action\n    }));\n    return requestFromServer.deleteSpecifications(ids).then(function () {\n      dispatch(actions.specificationsDeleted({\n        ids: ids\n      }));\n    }).catch(function (error) {\n      error.clientMessage = \"Can't delete specifications\";\n      dispatch(actions.catchError({\n        error: error,\n        callType: callTypes.action\n      }));\n    });\n  };\n};","map":{"version":3,"names":["requestFromServer","specificationsSlice","callTypes","actions","fetchSpecifications","queryParams","productId","dispatch","startCall","callType","list","specificationsFetched","totalCount","entities","findSpecifications","then","response","_response$data","data","catch","error","clientMessage","catchError","fetchSpecification","id","specificationFetched","specificationForEdit","undefined","action","getSpecificationById","specification","deleteSpecification","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","specificationUpdated","deleteSpecifications","ids","specificationsDeleted"],"sources":["D:/Metronic 7.2.9/theme/react/OnlineShop/src/app/modules/ECommerce/_redux/specifications/specificationsActions.js"],"sourcesContent":["import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}