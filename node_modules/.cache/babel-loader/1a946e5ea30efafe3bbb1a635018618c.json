{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Saeed\\\\Desktop\\\\onlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { reduxBatch } from \"@manaflair/redux-batch\";\nimport { persistStore } from \"redux-persist\";\nimport { rootReducer, rootSaga } from \"./rootReducer\";\nvar sagaMiddleware = createSagaMiddleware();\nvar middleware = [].concat(_toConsumableArray(getDefaultMiddleware({\n  immutableCheck: false,\n  serializableCheck: false,\n  thunk: true\n})), [sagaMiddleware]);\nvar store = configureStore({\n  reducer: rootReducer,\n  middleware: middleware,\n  devTools: process.env.NODE_ENV !== \"production\",\n  enhancers: [reduxBatch]\n});\n\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\nexport var persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","createSagaMiddleware","reduxBatch","persistStore","rootReducer","rootSaga","sagaMiddleware","middleware","concat","_toConsumableArray","immutableCheck","serializableCheck","thunk","store","reducer","devTools","process","env","NODE_ENV","enhancers","persistor","run"],"sources":["C:/Users/Saeed/Desktop/onlineShop/src/redux/store.js"],"sourcesContent":["import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {reduxBatch} from \"@manaflair/redux-batch\";\r\nimport {persistStore} from \"redux-persist\";\r\nimport {rootReducer, rootSaga} from \"./rootReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true\r\n  }),\r\n  sagaMiddleware\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n  enhancers: [reduxBatch]\r\n});\r\n\r\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n"],"mappings":";AAAA,SAAQA,cAAc,EAAEC,oBAAoB,QAAO,kBAAkB;AACrE,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,SAAQC,UAAU,QAAO,wBAAwB;AACjD,SAAQC,YAAY,QAAO,eAAe;AAC1C,SAAQC,WAAW,EAAEC,QAAQ,QAAO,eAAe;AAEnD,IAAMC,cAAc,GAAGL,oBAAoB,CAAC,CAAC;AAC7C,IAAMM,UAAU,MAAAC,MAAA,CAAAC,kBAAA,CACXT,oBAAoB,CAAC;EACtBU,cAAc,EAAE,KAAK;EACrBC,iBAAiB,EAAE,KAAK;EACxBC,KAAK,EAAE;AACT,CAAC,CAAC,IACFN,cAAc,EACf;AAED,IAAMO,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAEV,WAAW;EACpBG,UAAU,EAAVA,UAAU;EACVQ,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EAC/CC,SAAS,EAAE,CAACjB,UAAU;AACxB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,OAAO,IAAMkB,SAAS,GAAGjB,YAAY,CAACU,KAAK,CAAC;AAE5CP,cAAc,CAACe,GAAG,CAAChB,QAAQ,CAAC;AAE5B,eAAeQ,KAAK"},"metadata":{},"sourceType":"module"}