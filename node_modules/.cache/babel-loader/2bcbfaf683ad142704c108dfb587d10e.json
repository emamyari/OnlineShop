{"ast":null,"code":"/*\r\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\r\nCopyrights licensed under the New BSD License.\r\nSee the accompanying LICENSE file for terms.\r\n*/\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n  return JSON.stringify(inputs.map(function (input) {\n    return input && typeof input === 'object' ? orderedProps(input) : input;\n  }));\n}\nfunction orderedProps(obj) {\n  return Object.keys(obj).sort().map(function (k) {\n    var _a;\n    return _a = {}, _a[k] = obj[k], _a;\n  });\n}\nvar memoizeFormatConstructor = function memoizeFormatConstructor(FormatConstructor, cache) {\n  if (cache === void 0) {\n    cache = {};\n  }\n  return function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var cacheId = getCacheId(args);\n    var format = cacheId && cache[cacheId];\n    if (!format) {\n      format = new ((_a = FormatConstructor).bind.apply(_a, __spreadArrays([void 0], args)))();\n      if (cacheId) {\n        cache[cacheId] = format;\n      }\n    }\n    return format;\n  };\n};\nexport default memoizeFormatConstructor;","map":null,"metadata":{},"sourceType":"module"}