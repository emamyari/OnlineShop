{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emamyari\\\\Desktop\\\\metapp\\\\demo2\\\\src\\\\app\\\\modules\\\\ReactBootstrapExamples\\\\PopoversExamplesPage.js\",\n  _this = this;\nimport React from \"react\";\nimport { Button, Popover, OverlayTrigger, ButtonToolbar } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nvar popover = /*#__PURE__*/React.createElement(Popover, {\n  id: \"popover-basic\",\n  title: \"Popover right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, \"And here's some \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }\n}, \"amazing\"), \" content. It's very engaging. right?\");\nvar Example = function Example() {\n  return /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: popover,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Click me to see\"));\n};\nvar PopoversExamplesPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopoversExamplesPage, _React$Component);\n  var _super = _createSuper(PopoversExamplesPage);\n  function PopoversExamplesPage() {\n    _classCallCheck(this, PopoversExamplesPage);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PopoversExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \"A popover component, like those found in iOS.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/overlays/#popovers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Basic Example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Example, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Placement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"You can control the placement of the Popover.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, [\"top\", \"right\", \"bottom\", \"left\"].map(function (placement) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: \"sp \".concat(placement),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n          trigger: \"click\",\n          key: placement,\n          placement: placement,\n          overlay: /*#__PURE__*/React.createElement(Popover, {\n            id: \"popover-positioned-\".concat(placement),\n            title: \"Popover \".concat(placement),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }\n          }, \"Holy guacamole!\"), \" Check this info.\"),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"secondary\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        }, \"Popover on \", placement)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        }, \"\\xA0\"));\n      }))));\n    }\n  }]);\n  return PopoversExamplesPage;\n}(React.Component);\nexport { PopoversExamplesPage as default };\nvar jsCode1 = \"\\nconst popover = (\\n  <Popover id=\\\"popover-basic\\\" title=\\\"Popover right\\\">\\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\\n  </Popover>\\n);\\n\\nconst Example = () => (\\n  <OverlayTrigger trigger=\\\"click\\\" placement=\\\"right\\\" overlay={popover}>\\n    <Button variant=\\\"success\\\">Click me to see</Button>\\n  </OverlayTrigger>\\n);\\n\\nrender(<Example />);\\n\";\nvar jsCode2 = \"\\n<ButtonToolbar>\\n  {['top', 'right', 'bottom', 'left'].map(placement => (\\n    <OverlayTrigger\\n      trigger=\\\"click\\\"\\n      key={placement}\\n      placement={placement}\\n      overlay={\\n        <Popover\\n          id={`popover-positioned-${placement}`}\\n          title={`Popover ${placement}`}\\n        >\\n          <strong>Holy guacamole!</strong> Check this info.\\n        </Popover>\\n      }\\n    >\\n      <Button variant=\\\"secondary\\\">Popover on {placement}</Button>\\n    </OverlayTrigger>\\n  ))}\\n</ButtonToolbar>\\n\";","map":{"version":3,"names":["React","Button","Popover","OverlayTrigger","ButtonToolbar","Notice","KTCodeExample","popover","createElement","id","title","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Example","trigger","placement","overlay","_this","variant","PopoversExamplesPage","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_this2","Fragment","icon","target","className","rel","href","jsCode","jsCode1","beforeCodeTitle","jsCode2","map","concat","Component","default"],"sources":["C:/Users/Emamyari/Desktop/metapp/demo2/src/app/modules/ReactBootstrapExamples/PopoversExamplesPage.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Popover,\r\n  OverlayTrigger,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nexport default class PopoversExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>A popover component, like those found in iOS.</span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/overlays/#popovers\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\r\n          <Example />\r\n        </KTCodeExample>\r\n\r\n        <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Placement\">\r\n          <span>You can control the placement of the Popover.</span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <ButtonToolbar>\r\n            {[\"top\", \"right\", \"bottom\", \"left\"].map(placement => (\r\n              <span key={`sp ${placement}`}>\r\n                <OverlayTrigger\r\n                  trigger=\"click\"\r\n                  key={placement}\r\n                  placement={placement}\r\n                  overlay={\r\n                    <Popover\r\n                      id={`popover-positioned-${placement}`}\r\n                      title={`Popover ${placement}`}\r\n                    >\r\n                      <strong>Holy guacamole!</strong> Check this info.\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <Button variant=\"secondary\">Popover on {placement}</Button>\r\n                </OverlayTrigger>\r\n                <span>&nbsp;</span>\r\n              </span>\r\n            ))}\r\n          </ButtonToolbar>\r\n        </KTCodeExample>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\nconst popover = (\r\n  <Popover id=\"popover-basic\" title=\"Popover right\">\r\n    And here's some <strong>amazing</strong> content. It's very engaging. right?\r\n  </Popover>\r\n);\r\n\r\nconst Example = () => (\r\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n    <Button variant=\"success\">Click me to see</Button>\r\n  </OverlayTrigger>\r\n);\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode2 = `\r\n<ButtonToolbar>\r\n  {['top', 'right', 'bottom', 'left'].map(placement => (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      key={placement}\r\n      placement={placement}\r\n      overlay={\r\n        <Popover\r\n          id={\\`popover-positioned-\\${placement}\\`}\r\n          title={\\`Popover \\${placement}\\`}\r\n        >\r\n          <strong>Holy guacamole!</strong> Check this info.\r\n        </Popover>\r\n      }\r\n    >\r\n      <Button variant=\"secondary\">Popover on {placement}</Button>\r\n    </OverlayTrigger>\r\n  ))}\r\n</ButtonToolbar>\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}