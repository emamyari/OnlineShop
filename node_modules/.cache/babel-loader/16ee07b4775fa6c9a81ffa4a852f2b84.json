{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Saeed\\\\Desktop\\\\onlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Saeed\\\\Desktop\\\\onlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport carTableMock from \"./carTableMock\";\nimport MockUtils from \"./mock.utils\";\nexport default function mockProducts(mock) {\n  mock.onPost(\"api/products\").reply(function (_ref) {\n    var data = _ref.data;\n    var _JSON$parse = JSON.parse(data),\n      product = _JSON$parse.product;\n    var _product$model = product.model,\n      model = _product$model === void 0 ? \"\" : _product$model,\n      _product$manufacture = product.manufacture,\n      manufacture = _product$manufacture === void 0 ? \"\" : _product$manufacture,\n      _product$modelYear = product.modelYear,\n      modelYear = _product$modelYear === void 0 ? 2000 : _product$modelYear,\n      _product$mileage = product.mileage,\n      mileage = _product$mileage === void 0 ? 0 : _product$mileage,\n      _product$description = product.description,\n      description = _product$description === void 0 ? \"\" : _product$description,\n      _product$color = product.color,\n      color = _product$color === void 0 ? \"Black\" : _product$color,\n      _product$price = product.price,\n      price = _product$price === void 0 ? 1000 : _product$price,\n      _product$condition = product.condition,\n      condition = _product$condition === void 0 ? 0 : _product$condition,\n      _product$status = product.status,\n      status = _product$status === void 0 ? 0 : _product$status,\n      _product$VINCode = product.VINCode,\n      VINCode = _product$VINCode === void 0 ? \"\" : _product$VINCode;\n    var id = generateProductId();\n    var newProduct = {\n      id: id,\n      model: model,\n      manufacture: manufacture,\n      modelYear: modelYear,\n      mileage: mileage,\n      description: description,\n      color: color,\n      price: price,\n      condition: condition,\n      status: status,\n      VINCode: VINCode\n    };\n    carTableMock.push(newProduct);\n    return [200, {\n      product: newProduct\n    }];\n  });\n  mock.onPost(\"api/products/find\").reply(function (config) {\n    var mockUtils = new MockUtils();\n    var _JSON$parse2 = JSON.parse(config.data),\n      queryParams = _JSON$parse2.queryParams;\n    var filteredProducts = mockUtils.baseFilter(carTableMock, queryParams);\n    return [200, filteredProducts];\n  });\n  mock.onPost(\"api/products/deleteProducts\").reply(function (config) {\n    var _JSON$parse3 = JSON.parse(config.data),\n      ids = _JSON$parse3.ids;\n    ids.forEach(function (id) {\n      var index = carTableMock.findIndex(function (el) {\n        return el.id === id;\n      });\n      if (index > -1) {\n        carTableMock.splice(index, 1);\n      }\n    });\n    return [200];\n  });\n  mock.onPost(\"api/products/updateStatusForProducts\").reply(function (config) {\n    var _JSON$parse4 = JSON.parse(config.data),\n      ids = _JSON$parse4.ids,\n      status = _JSON$parse4.status;\n    carTableMock.forEach(function (el) {\n      if (ids.findIndex(function (id) {\n        return id === el.id;\n      }) > -1) {\n        el.status = status;\n      }\n    });\n    return [200];\n  });\n  mock.onGet(/api\\/products\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/products\\/(\\d+)/)[1];\n    var product = carTableMock.find(function (el) {\n      return el.id === +id;\n    });\n    if (!product) {\n      return [400];\n    }\n    return [200, product];\n  });\n  mock.onPut(/api\\/products\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/products\\/(\\d+)/)[1];\n    var _JSON$parse5 = JSON.parse(config.data),\n      product = _JSON$parse5.product;\n    var index = carTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n    if (!index) {\n      return [400];\n    }\n    carTableMock[index] = _objectSpread({}, product);\n    return [200];\n  });\n  mock.onDelete(/api\\/products\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/products\\/(\\d+)/)[1];\n    var index = carTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n    carTableMock.splice(index, 1);\n    if (!index === -1) {\n      return [400];\n    }\n    return [200];\n  });\n}\nfunction generateProductId() {\n  var ids = carTableMock.map(function (el) {\n    return el.id;\n  });\n  var maxId = Math.max.apply(Math, _toConsumableArray(ids));\n  return maxId + 1;\n}","map":{"version":3,"names":["carTableMock","MockUtils","mockProducts","mock","onPost","reply","_ref","data","_JSON$parse","JSON","parse","product","_product$model","model","_product$manufacture","manufacture","_product$modelYear","modelYear","_product$mileage","mileage","_product$description","description","_product$color","color","_product$price","price","_product$condition","condition","_product$status","status","_product$VINCode","VINCode","id","generateProductId","newProduct","push","config","mockUtils","_JSON$parse2","queryParams","filteredProducts","baseFilter","_JSON$parse3","ids","forEach","index","findIndex","el","splice","_JSON$parse4","onGet","url","match","find","onPut","_JSON$parse5","_objectSpread","onDelete","map","maxId","Math","max","apply","_toConsumableArray"],"sources":["C:/Users/Saeed/Desktop/onlineShop/src/app/modules/ECommerce/__mocks__/mockProduct.js"],"sourcesContent":["import carTableMock from \"./carTableMock\";\r\nimport MockUtils from \"./mock.utils\";\r\n\r\nexport default function mockProducts(mock) {\r\n  mock.onPost(\"api/products\").reply(({ data }) => {\r\n    const { product } = JSON.parse(data);\r\n    const {\r\n      model = \"\",\r\n      manufacture = \"\",\r\n      modelYear = 2000,\r\n      mileage = 0,\r\n      description = \"\",\r\n      color = \"Black\",\r\n      price = 1000,\r\n      condition = 0,\r\n      status = 0,\r\n      VINCode = \"\"\r\n    } = product;\r\n\r\n    const id = generateProductId();\r\n    const newProduct = {\r\n      id,\r\n      model,\r\n      manufacture,\r\n      modelYear,\r\n      mileage,\r\n      description,\r\n      color,\r\n      price,\r\n      condition,\r\n      status,\r\n      VINCode\r\n    };\r\n    carTableMock.push(newProduct);\r\n    return [200, { product: newProduct }];\r\n  });\r\n\r\n  mock.onPost(\"api/products/find\").reply(config => {\r\n    const mockUtils = new MockUtils();\r\n    const { queryParams } = JSON.parse(config.data);\r\n    const filteredProducts = mockUtils.baseFilter(carTableMock, queryParams);\r\n    return [200, filteredProducts];\r\n  });\r\n\r\n  mock.onPost(\"api/products/deleteProducts\").reply(config => {\r\n    const { ids } = JSON.parse(config.data);\r\n    ids.forEach(id => {\r\n      const index = carTableMock.findIndex(el => el.id === id);\r\n      if (index > -1) {\r\n        carTableMock.splice(index, 1);\r\n      }\r\n    });\r\n    return [200];\r\n  });\r\n\r\n  mock.onPost(\"api/products/updateStatusForProducts\").reply(config => {\r\n    const { ids, status } = JSON.parse(config.data);\r\n    carTableMock.forEach(el => {\r\n      if (ids.findIndex(id => id === el.id) > -1) {\r\n        el.status = status;\r\n      }\r\n    });\r\n    return [200];\r\n  });\r\n\r\n  mock.onGet(/api\\/products\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/products\\/(\\d+)/)[1];\r\n    const product = carTableMock.find(el => el.id === +id);\r\n    if (!product) {\r\n      return [400];\r\n    }\r\n\r\n    return [200, product];\r\n  });\r\n\r\n  mock.onPut(/api\\/products\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/products\\/(\\d+)/)[1];\r\n    const { product } = JSON.parse(config.data);\r\n    const index = carTableMock.findIndex(el => el.id === +id);\r\n    if (!index) {\r\n      return [400];\r\n    }\r\n\r\n    carTableMock[index] = { ...product };\r\n    return [200];\r\n  });\r\n\r\n  mock.onDelete(/api\\/products\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/products\\/(\\d+)/)[1];\r\n    const index = carTableMock.findIndex(el => el.id === +id);\r\n    carTableMock.splice(index, 1);\r\n    if (!index === -1) {\r\n      return [400];\r\n    }\r\n\r\n    return [200];\r\n  });\r\n}\r\n\r\nfunction generateProductId() {\r\n  const ids = carTableMock.map(el => el.id);\r\n  const maxId = Math.max(...ids);\r\n  return maxId + 1;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}