{"ast":null,"code":"var _jsxFileName = \"H:\\\\OnlineShop\\\\src\\\\app\\\\modules\\\\ECommerce\\\\pages\\\\products\\\\products-table\\\\ProductsTable.js\";\n// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport * as uiHelpers from \"../ProductsUIHelpers\";\nimport { getSelectRow, getHandlerTableChange, NoRecordsFoundMessage, PleaseWaitMessage, sortCaret } from \"../../../../../../_metronic/_helpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\nexport function ProductsTable() {\n  var _this = this;\n  // Products UI Context\n  var productsUIContext = useProductsUIContext();\n  var productsUIProps = useMemo(function () {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog\n    };\n  }, [productsUIContext]);\n\n  // Getting curret state of products list from store (Redux)\n  var _useSelector = useSelector(function (state) {\n      return {\n        currentState: state.products\n      };\n    }, shallowEqual),\n    currentState = _useSelector.currentState;\n  var totalCount = currentState.totalCount,\n    entities = currentState.entities,\n    listLoading = currentState.listLoading;\n  // Products Redux state\n  var dispatch = useDispatch();\n  useEffect(function () {\n    // clear selections list\n    productsUIProps.setIds([]);\n    // server call by queryParams\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.queryParams, dispatch]);\n  // Table columns\n  var columns = [{\n    dataField: \"VINCode\",\n    text: \"VIN Code (ID)\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"manufacture\",\n    text: \"Manufacture\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"model\",\n    text: \"Model\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"modelYear\",\n    text: \"Model Year\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"color\",\n    text: \"Color\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.ColorColumnFormatter\n  }, {\n    dataField: \"price\",\n    text: \"Price\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.PriceColumnFormatter\n  }, {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.StatusColumnFormatter\n  }, {\n    dataField: \"condition\",\n    text: \"Condition\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.ConditionColumnFormatter\n  }, {\n    dataField: \"action\",\n    text: \"Actions\",\n    formatter: columnFormatters.ActionsColumnFormatter,\n    formatExtraData: {\n      openEditProductPage: productsUIProps.openEditProductPage,\n      openDeleteProductDialog: productsUIProps.openDeleteProductDialog\n    },\n    classes: \"text-right pr-0\",\n    headerClasses: \"text-right pr-3\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }];\n  // Table pagination properties\n  var paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: productsUIProps.queryParams.pageSize,\n    page: productsUIProps.queryParams.pageNumber\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PaginationProvider, {\n    pagination: paginationFactory(paginationOptions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var paginationProps = _ref.paginationProps,\n      paginationTableProps = _ref.paginationTableProps;\n    return /*#__PURE__*/React.createElement(Pagination, {\n      isLoading: listLoading,\n      paginationProps: paginationProps,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      wrapperClasses: \"table-responsive\",\n      classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n      bootstrap4: true,\n      bordered: false,\n      remote: true,\n      keyField: \"id\",\n      data: entities === null ? [] : entities,\n      columns: columns,\n      defaultSorted: uiHelpers.defaultSorted,\n      onTableChange: getHandlerTableChange(productsUIProps.setQueryParams),\n      selectRow: getSelectRow({\n        entities: entities,\n        ids: productsUIProps.ids,\n        setIds: productsUIProps.setIds\n      })\n    }, paginationTableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PleaseWaitMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NoRecordsFoundMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    })));\n  }));\n}","map":{"version":3,"names":["React","useEffect","useMemo","BootstrapTable","paginationFactory","PaginationProvider","shallowEqual","useDispatch","useSelector","actions","uiHelpers","getSelectRow","getHandlerTableChange","NoRecordsFoundMessage","PleaseWaitMessage","sortCaret","columnFormatters","Pagination","useProductsUIContext","ProductsTable","_this","productsUIContext","productsUIProps","ids","setIds","queryParams","setQueryParams","openEditProductPage","openDeleteProductDialog","_useSelector","state","currentState","products","totalCount","entities","listLoading","dispatch","fetchProducts","columns","dataField","text","sort","formatter","ColorColumnFormatter","PriceColumnFormatter","StatusColumnFormatter","ConditionColumnFormatter","ActionsColumnFormatter","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","sizePerPageList","sizePerPage","pageSize","page","pageNumber","createElement","Fragment","pagination","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_ref","paginationProps","paginationTableProps","isLoading","Object","assign","wrapperClasses","bootstrap4","bordered","remote","keyField","data","defaultSorted","onTableChange","selectRow"],"sources":["H:/OnlineShop/src/app/modules/ECommerce/pages/products/products-table/ProductsTable.js"],"sourcesContent":["// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"VINCode\",\r\n      text: \"VIN Code (ID)\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"manufacture\",\r\n      text: \"Manufacture\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"model\",\r\n      text: \"Model\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"modelYear\",\r\n      text: \"Model Year\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"color\",\r\n      text: \"Color\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ColorColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.PriceColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}