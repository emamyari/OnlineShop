{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Saeed\\\\Desktop\\\\onlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Saeed\\\\Desktop\\\\onlineShop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport remarkTableMock from \"./remarkTableMock\";\nimport MockUtils from \"./mock.utils\";\nexport default function mockRemarks(mock) {\n  mock.onPost(\"api/remarks\").reply(function (_ref) {\n    var data = _ref.data;\n    var _JSON$parse = JSON.parse(data),\n      remark = _JSON$parse.remark;\n    var carId = remark.carId,\n      _remark$text = remark.text,\n      text = _remark$text === void 0 ? \"\" : _remark$text,\n      _remark$dueDate = remark.dueDate,\n      dueDate = _remark$dueDate === void 0 ? \"01/01/2019\" : _remark$dueDate,\n      _remark$type = remark.type,\n      type = _remark$type === void 0 ? 0 : _remark$type;\n    var id = generateRemarkId();\n    var newRemark = {\n      id: id,\n      carId: +carId,\n      text: text,\n      dueDate: dueDate,\n      type: type\n    };\n    remarkTableMock.push(newRemark);\n    return [200, {\n      remark: newRemark\n    }];\n  });\n  mock.onPost(/api\\/remarksfind\\/\\d+/).reply(function (config) {\n    var urls = config.url.split(\"/\");\n    var id = urls[2];\n    var mockUtils = new MockUtils();\n    var _JSON$parse2 = JSON.parse(config.data),\n      queryParams = _JSON$parse2.queryParams;\n    var productRemarks = remarkTableMock.filter(function (el) {\n      return el.carId === +id;\n    });\n    var filterdRemarks = mockUtils.baseFilter(productRemarks, queryParams);\n    return [200, filterdRemarks];\n  });\n  mock.onPost(\"api/remarks/deleteRemarks\").reply(function (config) {\n    var _JSON$parse3 = JSON.parse(config.data),\n      ids = _JSON$parse3.ids;\n    ids.forEach(function (id) {\n      var index = remarkTableMock.findIndex(function (el) {\n        return el.id === id;\n      });\n      if (index > -1) {\n        remarkTableMock.splice(index, 1);\n      }\n    });\n    return [200];\n  });\n  mock.onGet(/api\\/remarks\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\n    var remark = remarkTableMock.find(function (el) {\n      return el.id === +id;\n    });\n    if (!remark) {\n      return [400];\n    }\n    return [200, remark];\n  });\n  mock.onPut(/api\\/remarks\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\n    var _JSON$parse4 = JSON.parse(config.data),\n      remark = _JSON$parse4.remark;\n    var index = remarkTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n    if (!index) {\n      return [400];\n    }\n    remarkTableMock[index] = _objectSpread({}, remark);\n    return [200];\n  });\n  mock.onDelete(/api\\/remarks\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\n    var index = remarkTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n    remarkTableMock.splice(index, 1);\n    if (!index === -1) {\n      return [400];\n    }\n    return [200];\n  });\n}\nfunction generateRemarkId() {\n  var ids = remarkTableMock.map(function (el) {\n    return el.id;\n  });\n  var maxId = Math.max.apply(Math, _toConsumableArray(ids));\n  return maxId + 1;\n}","map":{"version":3,"names":["remarkTableMock","MockUtils","mockRemarks","mock","onPost","reply","_ref","data","_JSON$parse","JSON","parse","remark","carId","_remark$text","text","_remark$dueDate","dueDate","_remark$type","type","id","generateRemarkId","newRemark","push","config","urls","url","split","mockUtils","_JSON$parse2","queryParams","productRemarks","filter","el","filterdRemarks","baseFilter","_JSON$parse3","ids","forEach","index","findIndex","splice","onGet","match","find","onPut","_JSON$parse4","_objectSpread","onDelete","map","maxId","Math","max","apply","_toConsumableArray"],"sources":["C:/Users/Saeed/Desktop/onlineShop/src/app/modules/ECommerce/__mocks__/mockRemark.js"],"sourcesContent":["import remarkTableMock from \"./remarkTableMock\";\r\nimport MockUtils from \"./mock.utils\";\r\n\r\nexport default function mockRemarks(mock) {\r\n  mock.onPost(\"api/remarks\").reply(({ data }) => {\r\n    const { remark } = JSON.parse(data);\r\n    const { carId, text = \"\", dueDate = \"01/01/2019\", type = 0 } = remark;\r\n    const id = generateRemarkId();\r\n    const newRemark = {\r\n      id,\r\n      carId: +carId,\r\n      text,\r\n      dueDate,\r\n      type\r\n    };\r\n    remarkTableMock.push(newRemark);\r\n    return [200, { remark: newRemark }];\r\n  });\r\n\r\n  mock.onPost(/api\\/remarksfind\\/\\d+/).reply(config => {\r\n    const urls = config.url.split(\"/\");\r\n    const id = urls[2];\r\n    const mockUtils = new MockUtils();\r\n    const { queryParams } = JSON.parse(config.data);\r\n    const productRemarks = remarkTableMock.filter(el => el.carId === +id);\r\n    const filterdRemarks = mockUtils.baseFilter(productRemarks, queryParams);\r\n    return [200, filterdRemarks];\r\n  });\r\n\r\n  mock.onPost(\"api/remarks/deleteRemarks\").reply(config => {\r\n    const { ids } = JSON.parse(config.data);\r\n    ids.forEach(id => {\r\n      const index = remarkTableMock.findIndex(el => el.id === id);\r\n      if (index > -1) {\r\n        remarkTableMock.splice(index, 1);\r\n      }\r\n    });\r\n    return [200];\r\n  });\r\n\r\n  mock.onGet(/api\\/remarks\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\r\n    const remark = remarkTableMock.find(el => el.id === +id);\r\n    if (!remark) {\r\n      return [400];\r\n    }\r\n\r\n    return [200, remark];\r\n  });\r\n\r\n  mock.onPut(/api\\/remarks\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\r\n    const { remark } = JSON.parse(config.data);\r\n    const index = remarkTableMock.findIndex(el => el.id === +id);\r\n    if (!index) {\r\n      return [400];\r\n    }\r\n\r\n    remarkTableMock[index] = { ...remark };\r\n    return [200];\r\n  });\r\n\r\n  mock.onDelete(/api\\/remarks\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\r\n    const index = remarkTableMock.findIndex(el => el.id === +id);\r\n    remarkTableMock.splice(index, 1);\r\n    if (!index === -1) {\r\n      return [400];\r\n    }\r\n\r\n    return [200];\r\n  });\r\n}\r\n\r\nfunction generateRemarkId() {\r\n  const ids = remarkTableMock.map(el => el.id);\r\n  const maxId = Math.max(...ids);\r\n  return maxId + 1;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,cAAc;AAEpC,eAAe,SAASC,WAAWA,CAACC,IAAI,EAAE;EACxCA,IAAI,CAACC,MAAM,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC,UAAAC,IAAA,EAAc;IAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACtC,IAAAC,WAAA,GAAmBC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;MAA3BI,MAAM,GAAAH,WAAA,CAANG,MAAM;IACd,IAAQC,KAAK,GAAkDD,MAAM,CAA7DC,KAAK;MAAAC,YAAA,GAAkDF,MAAM,CAAtDG,IAAI;MAAJA,IAAI,GAAAD,YAAA,cAAG,EAAE,GAAAA,YAAA;MAAAE,eAAA,GAAuCJ,MAAM,CAA3CK,OAAO;MAAPA,OAAO,GAAAD,eAAA,cAAG,YAAY,GAAAA,eAAA;MAAAE,YAAA,GAAeN,MAAM,CAAnBO,IAAI;MAAJA,IAAI,GAAAD,YAAA,cAAG,CAAC,GAAAA,YAAA;IAC1D,IAAME,EAAE,GAAGC,gBAAgB,CAAC,CAAC;IAC7B,IAAMC,SAAS,GAAG;MAChBF,EAAE,EAAFA,EAAE;MACFP,KAAK,EAAE,CAACA,KAAK;MACbE,IAAI,EAAJA,IAAI;MACJE,OAAO,EAAPA,OAAO;MACPE,IAAI,EAAJA;IACF,CAAC;IACDlB,eAAe,CAACsB,IAAI,CAACD,SAAS,CAAC;IAC/B,OAAO,CAAC,GAAG,EAAE;MAAEV,MAAM,EAAEU;IAAU,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFlB,IAAI,CAACC,MAAM,CAAC,uBAAuB,CAAC,CAACC,KAAK,CAAC,UAAAkB,MAAM,EAAI;IACnD,IAAMC,IAAI,GAAGD,MAAM,CAACE,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;IAClC,IAAMP,EAAE,GAAGK,IAAI,CAAC,CAAC,CAAC;IAClB,IAAMG,SAAS,GAAG,IAAI1B,SAAS,CAAC,CAAC;IACjC,IAAA2B,YAAA,GAAwBnB,IAAI,CAACC,KAAK,CAACa,MAAM,CAAChB,IAAI,CAAC;MAAvCsB,WAAW,GAAAD,YAAA,CAAXC,WAAW;IACnB,IAAMC,cAAc,GAAG9B,eAAe,CAAC+B,MAAM,CAAC,UAAAC,EAAE;MAAA,OAAIA,EAAE,CAACpB,KAAK,KAAK,CAACO,EAAE;IAAA,EAAC;IACrE,IAAMc,cAAc,GAAGN,SAAS,CAACO,UAAU,CAACJ,cAAc,EAAED,WAAW,CAAC;IACxE,OAAO,CAAC,GAAG,EAAEI,cAAc,CAAC;EAC9B,CAAC,CAAC;EAEF9B,IAAI,CAACC,MAAM,CAAC,2BAA2B,CAAC,CAACC,KAAK,CAAC,UAAAkB,MAAM,EAAI;IACvD,IAAAY,YAAA,GAAgB1B,IAAI,CAACC,KAAK,CAACa,MAAM,CAAChB,IAAI,CAAC;MAA/B6B,GAAG,GAAAD,YAAA,CAAHC,GAAG;IACXA,GAAG,CAACC,OAAO,CAAC,UAAAlB,EAAE,EAAI;MAChB,IAAMmB,KAAK,GAAGtC,eAAe,CAACuC,SAAS,CAAC,UAAAP,EAAE;QAAA,OAAIA,EAAE,CAACb,EAAE,KAAKA,EAAE;MAAA,EAAC;MAC3D,IAAImB,KAAK,GAAG,CAAC,CAAC,EAAE;QACdtC,eAAe,CAACwC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAClC;IACF,CAAC,CAAC;IACF,OAAO,CAAC,GAAG,CAAC;EACd,CAAC,CAAC;EAEFnC,IAAI,CAACsC,KAAK,CAAC,mBAAmB,CAAC,CAACpC,KAAK,CAAC,UAAAkB,MAAM,EAAI;IAC9C,IAAMJ,EAAE,GAAGI,MAAM,CAACE,GAAG,CAACiB,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IACrD,IAAM/B,MAAM,GAAGX,eAAe,CAAC2C,IAAI,CAAC,UAAAX,EAAE;MAAA,OAAIA,EAAE,CAACb,EAAE,KAAK,CAACA,EAAE;IAAA,EAAC;IACxD,IAAI,CAACR,MAAM,EAAE;MACX,OAAO,CAAC,GAAG,CAAC;IACd;IAEA,OAAO,CAAC,GAAG,EAAEA,MAAM,CAAC;EACtB,CAAC,CAAC;EAEFR,IAAI,CAACyC,KAAK,CAAC,mBAAmB,CAAC,CAACvC,KAAK,CAAC,UAAAkB,MAAM,EAAI;IAC9C,IAAMJ,EAAE,GAAGI,MAAM,CAACE,GAAG,CAACiB,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IACrD,IAAAG,YAAA,GAAmBpC,IAAI,CAACC,KAAK,CAACa,MAAM,CAAChB,IAAI,CAAC;MAAlCI,MAAM,GAAAkC,YAAA,CAANlC,MAAM;IACd,IAAM2B,KAAK,GAAGtC,eAAe,CAACuC,SAAS,CAAC,UAAAP,EAAE;MAAA,OAAIA,EAAE,CAACb,EAAE,KAAK,CAACA,EAAE;IAAA,EAAC;IAC5D,IAAI,CAACmB,KAAK,EAAE;MACV,OAAO,CAAC,GAAG,CAAC;IACd;IAEAtC,eAAe,CAACsC,KAAK,CAAC,GAAAQ,aAAA,KAAQnC,MAAM,CAAE;IACtC,OAAO,CAAC,GAAG,CAAC;EACd,CAAC,CAAC;EAEFR,IAAI,CAAC4C,QAAQ,CAAC,mBAAmB,CAAC,CAAC1C,KAAK,CAAC,UAAAkB,MAAM,EAAI;IACjD,IAAMJ,EAAE,GAAGI,MAAM,CAACE,GAAG,CAACiB,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IACrD,IAAMJ,KAAK,GAAGtC,eAAe,CAACuC,SAAS,CAAC,UAAAP,EAAE;MAAA,OAAIA,EAAE,CAACb,EAAE,KAAK,CAACA,EAAE;IAAA,EAAC;IAC5DnB,eAAe,CAACwC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAChC,IAAI,CAACA,KAAK,KAAK,CAAC,CAAC,EAAE;MACjB,OAAO,CAAC,GAAG,CAAC;IACd;IAEA,OAAO,CAAC,GAAG,CAAC;EACd,CAAC,CAAC;AACJ;AAEA,SAASlB,gBAAgBA,CAAA,EAAG;EAC1B,IAAMgB,GAAG,GAAGpC,eAAe,CAACgD,GAAG,CAAC,UAAAhB,EAAE;IAAA,OAAIA,EAAE,CAACb,EAAE;EAAA,EAAC;EAC5C,IAAM8B,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAAG,kBAAA,CAAQjB,GAAG,EAAC;EAC9B,OAAOa,KAAK,GAAG,CAAC;AAClB"},"metadata":{},"sourceType":"module"}